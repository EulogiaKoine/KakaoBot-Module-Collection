// --------- 환경 세팅 ----------

// inspire 환경 세팅
require('inspire')(this);

inspire('reinforce') // 성능 강화 패키지 적용
inspire('util.File') // 향상된 파일 시스템 사용

// 컴파일 시작할 때 작동하는 함수
function onStartCompile(){
    ThreadManager.stopAll();
}
// -------------------------------

const scriptName = "RENEW RPG 5";
const PATH = "/storage/emulated/0/Newrpg2023/player/";
const FS = FileStream;
const WEXP = 1;
const WGOLD = 1;
const gdc = 1;
const Digit = {
    split: 4, // 분할 자릿수
    name: ['', '만', '억', '조', '경', '해'],
    dec: 2, // 표시할 소수점 이하 수
    stringify(n){
        let i = 0;
        while (n >= Math.pow(10, this.split * (i + 1))) {
            i++;
        }
        return ((n / Math.pow(10, this.split * i - this.dec) >> 0) / Math.pow(10, this.dec)) + this.name[i];
    }
}
const PREFIX = "*"; // 접두사
const movable = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "41"]; // 이동 가능한 장소 ID(문자열)
//const responseFix = response;

// 유저 테이블
const users = {};

// 현존하는 모든 유저들로 유저 테이블 채우기
if(true){
    let list = java.io.File(PATH + "Data").list();
    let file;
    for(let playerName of list){ // 모든 플레이어에 대해서...
        // 플레이어 정보 JSON 파일 객체 생성
        file = new File(PATH + "Data/" + playerName + "/" + playerName + ".json", true /* isJson 옵션 */)
        if(file.exists){ // 파일이 존재한다면
            file.load() // 불러오기
            users[playerName] = file; // 유저 테이블에 파일 객체를 저장
        } else {
            // 존재하지 않을 경우
            //  = 등록은 되어있지만 정상적인 플레이어 파일이 존재하지 않음
        }
    }
}


// 2023-07-29 updated by Koine
// 플레이어 데이터 존재 여부 확인 함수
function haveData(name) {
    // before - before 표시된 이전 코드 주석들 거슬리면 지워도 되셔요! 예의상 남겨둔...
    // return java.io.File(PATH + "Data/" + name + "/" + name + ".json").canRead();
    return name in users;
}

// 2023-07-29 updated by Koine
// 플레이어 데이터 가져오는 함수
// 존재할 시 그 데이터를, 아니라면 null을 반환한다.
function updatePlayer(name) {
    // before
    // return JSON.parse(FS.read(PATH + "Data/" + name + "/" + name + ".json"));
    if(name in users) // 유저가 존재하면
        return users[name].read(); // 파일 내용 읽어오기(객체)
    // 존재하지 않으면 null 반환(이전과 똑같음)
    return null;
}

// 2023-07-29 updated by Koine
// 플레이어 데이터 저장 함수
// 존재할 시 내부 저장소에 저장을
// 존재하지 않을 시 새로 생성해서 저장한다.
function savePlayer(data, name) {
    // FS.write(PATH + "Data/" + name + "/" + name + ".json", JSON.stringify(data, null, "\t"));
    if(name in users) // 존재하는 유저면
        users[name].save(); // 저장소에 저장(빠름!)
    else { // 존재하지 않을 경우, 새로 생성해서 저장
        let file = new File(PATH + "Data/" + name + "/" + name + ".json", true);
        file.write(data); // 데이터 갱신하고
        file.save(); // 내부 저장소에 저장하고
        users[name] = file; // 테이블에 추가
    }
}

// 2023-07-29 update by koine
// 플레이어 이름을 배열로 반환
function playerlist(){
    return Object.keys(users)
}



// 경험치 부스트
function exp_multiple(lv){
    if(lv <= 500) return 1.5;
    else if(lv < 1000) return 1.5;
    else if(lv == 1000) return 0;
    else return 1;
}

// 강화석 드랍 수
function reinStone_drop_count(location_id){
    if(location_id <= 3) return makeRnd(1, 3);
    if(location_id <= 6) return makeRnd(1, 4);
    if(location_id <= 9) return makeRnd(1, 5);
    if(location_id <= 12) return makeRnd(1, 6);
    return makeRnd(1, 6);
}


function makeBar(count, max, barLength) {
    const BAR = ["", "▏", "▎", "▍", "▌", "▋", "▊", "▉", "█"];
if(count>max)return BAR[8].repeat(barLength>>0);
    let length = (barLength * count / max), dec = length % 1, int = length - dec, result = (BAR[8].repeat(int) + BAR[Math.round(dec * 8)]);
    if (count >= 0) {
        return (result + "　".repeat(barLength - result.length));
    } else {
        if (count < 0) {
            return ("                    ");
        }
    }
}

function makeRnd(min, max) {
    return Math.floor(Math.random() * (max - min) + min);
}


function setCurr(user) {
    user.hp_total = user.hp + (user.statpoint_hp * 15) + user.armor_hp;
    user.hpmax_total = user.hpmax + (user.statpoint_hp * 15) + user.armor_hp;
    user.atk_total = user.atk + Math.round(user.statpoint_atk * 1.3) + user.weapon_atk;
    user.mp_total = user.mp + Math.round(user.statpoint_mp * 2.5);
    user.mpmax_total = user.mpmax + Math.round(user.statpoint_mp * 2.5);
    user.cri_dam_total = (user.cri_dam + user.statpoint_crt * 1) + user.weapon_crt_dam;
    user.cri_per_total = (user.cri_per + user.statpoint_crt * 285) + user.weapon_crt_per;
    user.Expboost_total = user.Expboost;
    user.Goldboost_total = user.Goldboost;
}

function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {
    replier = {
        reply(m){
            Api.replyRoom(room, m)
        }
    }


    // 보낸사람 이름에서 슬래시와(/) 공백(\s) 모두 제거
    sender = sender.replace(/(\/|\s)/g, "");

    let hash = imageDB.getProfileHash(); // 해시코드
    let user = updatePlayer(sender) || {}; // 유저 데이터

    // 접두사 검사 및 cmd 배열 생성
    if(msg.startsWith(PREFIX)){
        // 메시지에서 접두사(*)를 잘라내고 공백(띄어쓰기, 엔터)를 기준으로 잘라낸 배열
        var cmd = msg.slice(PREFIX.length).split(/\s/);
    } else {
        return;
    }

    if (msg == "*회원가입") {
        if (user.name) {
            replier.reply("이미 회원가입 하셨습니다. 정보를 확인하시려면 '*내정보'를 입력하세요.");
        } else {
            user = {
                "name": sender,
                "level": 1,
                "Exp": 0,
                "Expmax": 3000,
                "heal": false,
                "Expboost": 0,
                "Expboost_total": 0,
                "gold": 3000,
                "Goldboost": 0,
                "Goldboost_total": 1,
                "statpoint": 0,
                "statpoint_hp": 0, //1당 6
                "statpoint_atk": 0, //1당 1
                "statpoint_crt": 0, //크뎀 1당 6 = 0.8% / 크확 1당 85 = 0.0125%
                "statpoint_mp": 0, //1당 2
                "atk": 60,
                "atk_total": 60,
                "hp": 1000,
                "hp_total": 1000,
                "hpmax": 1000,
                "hpmax_total": 1000,
                "mp": 300,
                "mp_total": 300,
                "mpmax": 300,
                "mpmax_total": 300,
                "def": 1,
                "cri_dam": 2500, // 1000 = ×100.0% = 1x
                "cri_dam_total": 2500,
                "cri_per": 10000, // 10000 = 1.0000% = 1%
                "cri_per_total": 10000,
                "week": 0,
                "event_id": 0,
                "tag_u": "[⚫️] S5 PLAYER",
                "tag_1": "",
                "tag_2": "",
                "tag_3": "",
                "tag_4": "",
                "tag_5": "",
                "rankscore": 0,
                "rank_tier": "UNRANKED",
                "season": 1,
                "monster_id": 0,
                "monster_name": "",
                "monster_exp": 0,
                "monster_name_1": "",
                "monster_exp_1": 0,
                "monster_name_2": "",
                "monster_exp_2": 0,
                "monster_name_3": "",
                "monster_exp_3": 0,
                "monster_name_4": "",
                "monster_exp_4": 0,
                "monster_name_5": "",
                "monster_exp_5": 0,
                "monster_hp": 0,
                "monster_hpmax": 0,
                "monster_atk": 0,
                "monster_def": 1,
                "monster_count": 0,
                "location": 1,
                "STAR": 1000,
                "coupon1": 0,
                "coupon2": 0,
                "dropA": 2000, // 10000 = 100.00%
                "dropB": 500,
                "dropC": 20,
                "dropD": 8, // 8 = 0.08%
                "hp_potion_s": 10,
                "hp_potion_m": 0,
                "hp_potion_l": 10,
                "mp_potion_s": 10,
                "mp_potion_m": 0,
                "mp_potion_l": 0,
                "monster_item": 0,
                "box_star_s": 0, // 1 ~ 100개의 star 지급
                "box_star_m": 0, // 500 ~ 20000개의 star 지급
                "box_star_l": 0, // 10000 ~ 100000개의 star 지급
                "box_random": 0, // 시즌마다 내용물이 변경되는 랜덤박스
                "box_event": 0, // 이벤트마다 내용물이 변경되는 랜덤박스
                "quest_point": 0,
                "event1": 0,
                "event2": 0,
                "event3": 0,
                "event4": 0,
                "stone_s": 0, // 하급 강화석
                "stone_m": 0, // 중급 강화석
                "stone_l": 0, // 상급 강화석
                "book_1": 0, // 하급 지식의 고서 (강화% × 2)
                "book_2": 0, // 중급 지식의 고서 (강화% × 4)
                "book_3": 0, // 상급 지식의 고서 (강화% × 10)
                "star_print_ss": 0, // 스타박스 하급 설계도 (일반 몬스터 사냥시 드랍)
                "star_print_s": 0, // 스타박스 일반 설계도 (보스급 or 일반 몬스터 사냥시 드랍)
                "star_print_m": 0, // 스타박스 고급 설계도 (보스급 or 이벤트보스 몬스터 사냥시 드랍)
                "star_print_l": 0, // 스타박스 최고급 설계도 (제작% / 10 / 고급 2개소모) [소형 스타박스 1개로 교환 가능]
                "star_print_ll": 0, // 스타박스 전설급 설계도 (제작% / 10 / 최고급 2개소모) [대형 스타박스 1개로 교환 가능 / 10%확률로 대성공 발생시 대형 스타박스 2개 등장]
                "normal_box": 0, // 랜덤박스
                "premium_box": 0, // 프리미엄 랜덤박스
                "starlight_box": 0, // 찬란한 프리미엄 랜덤박스
                "update_id": 0,
                "R_hp0": 0,
                "R_atk0": 0,
                "R_crt0": 0,
                "R_hp1": 0,
                "R_hp2": 0,
                "R_hp3": 0,
                "R_hp4": 0,
                "R_hp5": 0,
                "R_hp6": 0,
                "R_atk1": 0,
                "R_atk2": 0,
                "R_atk3": 0,
                "R_atk4": 0,
                "R_atk5": 0,
                "R_atk6": 0,
                "R_crt1": 0,
                "R_crt2": 0,
                "R_crt3": 0,
                "R_crt4": 0,
                "R_crt5": 0,
                "R_crt6": 0,
                "R_use_hp": 0,
                "R_use_atk": 0,
                "R_use_crt": 0,
                "R_gem_s": 0, // 룬 수정
                "R_gem_r": 0, // 룬 수정
                "R_gem_l": 0, // 룬 수정
                "R_gem_use": "미착용", // 착용중인 룬 수정
                "R_hp": 0, // 룬으로 인해 증가한 체력
                "R_atk": 0, // 룬으로 인해 증가한 공격력
                "R_crt_per": 0, // 룬으로 인해 증가한 크리티컬%
                "R_crt_dam": 0, // 룬으로 인해 증가한 크리티컬뎀
                "lava_gem": 0, // 용암 수정 (레이드에서 드랍. / 스타박스 설계도 제작 시도에 사용)
                "frozen_gem": 0, // 얼어붙은 수정 (레이드에서 드랍. / 장비 진화 재료)
                "forest_gem": 0, // 신성한 숲의 수정 (레이드에서 드랍. / 룬 제작에 사용)
                "lightning_gem": 0, // 번개 수정 (레이드에서 드랍. / 스킬 업그레이드에 사용)
                "dark_gem": 0, // 암흑 수정 (레이드에서 드랍. / 장비 옵션 재료)
                "date": 0, // 출석 날짜
                "dates": 0, // 연속 출석일
                "armor_id": 1,
                "armor_name": "낡은 가죽 갑옷",
                "armor_level": 1,
                "armor_up": 0,
                "armor_up_num": 3, // 확정 강화성공 (실패횟수)
                "armor_up_per": 10000, // 10000 = 100.00%
                "armor_up_tier": 1, // 진화레벨
                "armor_hp": 0,
                "armor_stone_s": 0,
                "armor_stone_l": 0,
                "armor_item": 0, //다른 재료
                "armor_up_bar": 0, // 갑옷 진화 전 진화 EXP 100% 찍어야 진화 가능
                "armor_up_bar_max": 1000,
                "weapon_id": 1,
                "weapon_name": "부러진 나뭇가지",
                "weapon_level": 1, // 렙제
                "weapon_up": 0,
                "weapon_up_num": 3, // 확정 강화성공 (실패횟수)
                "weapon_up_per": 10000, // 10000 = 100.00%
                "weapon_up_tier": 1, // 진화레벨
                "weapon_atk": 0,
                "weapon_crt_per": 0, // 진화시 crtper++
                "weapon_crt_dam": 0, // 진화시 crtdam++
                "weapon_stone_s": 0,
                "weapon_stone_l": 0,
                "weapon_item": 0, //다른 재료
                "weapon_up_bar": 0, // 갑옷 진화 전 진화 EXP 100% 찍어야 진화 가능
                "weapon_up_bar_max": 1000,
                "skill_point": 0,
                "skill_name_1": "강타",
                "skill_counter_1": "O",
                "skill_level_1": 1,
                "skill_point_1": 30,
                "skill_stone_1": 15,
                "skill_1": 5,
                "skill_cool_1": 35000,
                "skill_mp_1": 50,
                "skill_name_2": "불굴",
                "skill_counter_2": "X",
                "skill_level_2": 1,
                "skill_point_2": 25,
                "skill_stone_2": 12,
                "skill_2": 0.75,
                "skill_cool_2": 45000,
                "skill_mp_2": 40,
                "skill_name_3": "정화",
                "skill_counter_3": "X",
                "skill_level_3": 1,
                "skill_point_3": 10,
                "skill_stone_3": 5,
                "skill_3": 1,
                "skill_cool_3": 35000,
                "skill_mp_3": 30
            };

            savePlayer(user, sender);

            replier.reply(
                "회원가입 완료!"
                + "\n\"*내정보\"를 입력하여 " + sender + "님의 정보를 확인하세요."
            );
        }
        return;
    }
    
    //랭킹 여기에 넣기

   if(!user.name) return; // 미가입 유저는 아래 코드 사용 불가

    // 자동 레벨업 처리
   if (user.Exp >= user.Expmax) {
     if(user.level < 450){
       if(user.level < 30){
         exp_up = 500;
       }
       else if(user.level < 60){
         exp_up = 1700;
       }
       else if(user.level < 100){
         exp_up = 4300;
       }
       else if(user.level < 150){
         exp_up = 9600;
       }
       else if(user.level < 200){
         exp_up = 21810;
       }
       else if(user.level < 250){
         exp_up = 63000;
       }
       else if(user.level < 300){
         exp_up = 154180;
       }
       else if(user.level < 350){
         exp_up = 410000;
       }
       else if(user.level < 400){
         exp_up = 1060000;
       }
       else if(user.level < 450){
         exp_up = 2490000;
       }
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.0035%P"
            + "\nCRT.D + 0.1%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 10"
            + "\n\n◇ 보유 스탯포인트 : " + (user.statpoint + 3)
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += exp_up;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 35;
        user.cri_dam += 1;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 10;

        savePlayer(user, sender);
    }
    else{
    
    if(user.level < 500){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.002%P"
            + "\nCRT.D + 0.1%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 10"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 6080000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 20;
        user.cri_dam += 1;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 10;

        savePlayer(user, sender);
    }
    
    else if(user.level < 550){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.002%P"
            + "\nCRT.D + 0.1%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 10"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 12400000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 20;
        user.cri_dam += 1;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 10;

        savePlayer(user, sender);
    }
    
    else if(user.level < 600){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.002%P"
            + "\nCRT.D + 0.1%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 10"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 25700000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 20;
        user.cri_dam += 1;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 10;

        savePlayer(user, sender);
    }
    
    else if(user.level < 700){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 52800000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;

        savePlayer(user, sender);
    }
    else if(user.level < 800){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 129000000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;

        savePlayer(user, sender);
    }
    
    else if(user.level < 870){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 280000000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;

        savePlayer(user, sender);
    }
    
    else if(user.level < 930){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 700000000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;

        savePlayer(user, sender);
    }
    else if(user.level < 999){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp -= user.Expmax;
        user.Expmax += 1500000000;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;

        savePlayer(user, sender);
    }
    else if(user.level < 1000){
       replier.reply(
              "< LEVEL UP >"
            + "\n\nLEVEL " + user.level + " -> " + (user.level + 1)
            + "\n\nHP + 15"
            + "\nATK + 2"
            + "\nCRT.% + 0.001%P"
            + "\n스탯포인트 + 3"
            + "\n스킬포인트 + 3"
            + "\nSTAR + 30"
        );
        
        replier.reply("열쇠를 8개 모아주세요.\n\n사냥시 4%확률로 드랍됩니다.");

        user.rankscore += (user.level * 2);
        user.level += 1;
        user.Exp = 0;
        user.Expmax = 0;
        user.hp += 15;
        user.hpmax += 15;
        user.atk += 2;
        user.cri_per += 10;
        user.statpoint += 3;
        user.skill_point += 3;
        user.STAR += 30;
        user.Key = 0;
        user.Keymax = 8;

        savePlayer(user, sender);
    }
    }
    }

    // 명령어: 회복
    if (msg === "*회복" && user.monster_id == 0 && user.hpmax_total > user.hp_total && user.heal == false) {
        replier.reply("회복 중입니다.\n[" + 60 + "s 소요]");

        user.heal = true;
        savePlayer(user, sender);

        // 회복 예약
        setTimeout(sender => {
            replier.reply("HP 회복 완료!");

            let user = updatePlayer(sender);

            if (user.heal == true) {
                updatePlayer(user);{
                user.heal = false;
                user.hp = user.hpmax;
                user.mp = user.mpmax;
                /*user.skill_cool1 = false;
                user.skill_cool2 = false;
                user.skill_cool3 = false;*/
                user.rankscore += 5;
                savePlayer(user, sender);
                }

                savePlayer(user, sender);
            }
        }, 60000, [sender]); // 현재 회복 시간: 90초

        return;
    }

    setCurr(user);

    // 명령어: 내정보(상태창)
    if (msg === "*내정보") {
      let today2 = new Date(Date.now() + 32400000).toISOString().split('T')[0]
        if (user.name) {
            if (user.AF_s !== undefined){
              if(user.date !== today2){
                replier.reply("오늘의 출석체크 보상을 수령하지 않았습니다.\n\n*출석 으로 출석체크 보상을 받으세요!");
              }
              if(user.level !== 1000){
                replier.reply(
                sender + "님의 정보"
                + "\n\n칭호 : " + user.tag_u
                + "\n\n\nLEVEL " + user.level
                + "\nEXP : " + Digit.stringify(user.Exp) + " / " + Digit.stringify(user.Expmax)
                + "\n[ " + makeBar(user.Exp, user.Expmax, 10) + " ] (" + Math.floor(Math.round((user.Exp / user.Expmax) * 1000) / 10) + "%)"
                + "\n\nHP : " + Digit.stringify(user.hp_total) + " / " + Digit.stringify(user.hpmax_total) + " (+" + Digit.stringify(user.armor_hp) + ")"
                + "\n[ " + makeBar(user.hp_total, user.hpmax_total, 10) + " ] (" + Math.round((user.hp_total / user.hpmax_total) * 100) + "%)"
                + "\n\nMP : " + user.mp_total + " / " + user.mpmax_total
                + "\n\nATK : " + user.atk_total + " (+" + user.weapon_atk + ")"
                + "\n\n크리티컬 확률 : " + (user.cri_per_total / 10000) + "%"
                + "\n크리티컬 데미지 : ×" + (user.cri_dam_total / 10) + "%"
                + "\u200b".repeat(500)
                + "\n\n착용중인 갑옷 / " + "[Lv. " + user.armor_level + "] " + user.armor_name + "(+" + user.armor_up + ")"
                + "\n착용중인 무기 / " + "[Lv. " + user.weapon_level + "] " + user.weapon_name + "(+" + user.weapon_up + ")"
                + "\n착용중인 룬 / " + user.R_gem_use
                +" \n\n\nGOLD / " + user.gold
                + "\nSTAR / " + user.STAR
                + "\n\nSEASON PLAY TIER : 𝐔𝐍𝐑𝐀𝐍𝐊𝐄𝐃 [# ??]\n" + user.rankscore + "𝗟𝗣"
                + "\n\n아티팩트 종합 티어 : " + user.AF_rank + " [+" + user.AF_level_total + "]"
                + "\n\n*명령어 -> 전체 명령어 확인"
                + "\n*장비 -> 갑옷/무기 상세 확인"
                + "\n*룬 -> 룬 상세 확인 (준비중)"
                + "\n*랭킹 -> 전체 랭킹 확인"
                + "\n*스킬 -> 스킬 명령어 확인"
                + "\n*아티팩트 -> 아티팩트 명령어 확인"
            );
            var time = new Date();
            }
            else if(user.level == 1000){
              replier.reply(
                sender + "님의 정보"
                + "\n\n칭호 : " + user.tag_u
                + "\n\n\nLEVEL " + user.level + " [LOCKED - 열쇠필요]"
                + "\nLEVEL UP KEY : " + Digit.stringify(user.Key) + " / " + Digit.stringify(user.Keymax)
                + "\n[ " + makeBar(user.Key, user.Keymax, 10) + " ] (" + Math.floor(Math.round((user.Key / user.Keymax) * 1000) / 10) + "%)"
                + "\n\nHP : " + Digit.stringify(user.hp_total) + " / " + Digit.stringify(user.hpmax_total) + " (+" + Digit.stringify(user.armor_hp) + ")"
                + "\n[ " + makeBar(user.hp_total, user.hpmax_total, 10) + " ] (" + Math.round((user.hp_total / user.hpmax_total) * 100) + "%)"
                + "\n\nMP : " + user.mp_total + " / " + user.mpmax_total
                + "\n\nATK : " + user.atk_total + " (+" + user.weapon_atk + ")"
                + "\n\n크리티컬 확률 : " + (user.cri_per_total / 10000) + "%"
                + "\n크리티컬 데미지 : ×" + (user.cri_dam_total / 10) + "%"
                + "\u200b".repeat(500)
                + "\n\n착용중인 갑옷 / " + "[Lv. " + user.armor_level + "] " + user.armor_name + "(+" + user.armor_up + ")"
                + "\n착용중인 무기 / " + "[Lv. " + user.weapon_level + "] " + user.weapon_name + "(+" + user.weapon_up + ")"
                + "\n착용중인 룬 / " + user.R_gem_use
                +" \n\n\nGOLD / " + user.gold
                + "\nSTAR / " + user.STAR
                + "\n\nSEASON PLAY TIER : 𝐔𝐍𝐑𝐀𝐍𝐊𝐄𝐃 [# ??]\n" + user.rankscore + "𝗟𝗣"
                + "\n\n아티팩트 종합 티어 : " + user.AF_rank + " [+" + user.AF_level_total + "]"
                + "\n\n*명령어 -> 전체 명령어 확인"
                + "\n*장비 -> 갑옷/무기 상세 확인"
                + "\n*룬 -> 룬 상세 확인 (준비중)"
                + "\n*랭킹 -> 전체 랭킹 확인"
                + "\n*스킬 -> 스킬 명령어 확인"
            );
            
            }
            }
// replier.reply('Run_Time : ' + (Date.now() - time) / 1000 + 's');
            else {
              replier.reply("[ ! ]\n\n업데이트가 진행되지 않았습니다.\n게임의 원활한 진행을 위해 '*아티팩트'로 아티팩트 업데이트를 진행해주세요.\n\n업데이트를 진행하지 않아 발생한 불이익에 대해서는 오류보상지급이 불가능합니다.");
            }
        } else {
            replier.reply(
                "회원가입이 되지 않았습니다."
                + "\n\n*회원가입 으로 계정을 만들어주세요."
            );
        }

        return;
    }

    // 명령어: 스탯(스펙)
    if (msg === "*스탯") {
        replier.reply(
            sender + "님의 스탯 정보\n\n<*스탯올리기 (스탯명 or id번호) (올릴 숫자)>"
            + "\n\n\n잔여 스탯포인트 : " + user.statpoint
            + "\n\n체력(id 1) : " + user.statpoint_hp
            + "\n\n공격력(id 2) : " + user.statpoint_atk
            + "\n\n크리티컬(id 3) : " + user.statpoint_crt
            + "\n\n마나(id 4) : " + user.statpoint_mp
            + "\n\n\n/능력치 증가 수치/"
            + "\n체력 : HP + 15 / 공격력 : ATK + 1.3\n크리티컬 : CRT.DMG + 0.1%P, CRT% + 0.0285%P\n마나 : MP + 2.5"
            + "\n\n*스탯초기화 로, 스탯 초기화가 가능합니다. (비용 무료)"
        );

        return;
    }

    // 명령어: 스탯 분배
    if (cmd[0] === "스탯올리기") {
        if(isNaN(cmd[2])){
            replier.reply("알맞은 수를 입력해주세요.");
            return;
        }

        cmd[2] = +cmd[2] >> 0;

        // 분배할 포인트가 부족하면
        if(user.statpoint < cmd[2] || cmd[2] < 0){
            replier.reply("스탯포인트가 부족합니다.");
            return;
        }

        switch(cmd[1]){
            case "공격력":
                    user.statpoint -= cmd[2];
                    user.statpoint_atk += cmd[2];
                    break;
            case "2":
                    user.statpoint -= cmd[2];
                    user.statpoint_atk += cmd[2];
                    break;

            case "체력":
                if(user.hp_total >= user.hpmax_total){
                user.statpoint -= cmd[2];
                user.statpoint_hp += cmd[2];
                }
                else{
                replier.reply("체력이 최대치인 경우에만 스탯올리기가 가능합니다.");
                }
                break;
            case "1":
                if(user.hp_total >= user.hpmax_total){
                user.statpoint -= cmd[2];
                user.statpoint_hp += cmd[2];
                }
                else{
                replier.reply("체력이 최대치인 경우에만 스탯올리기가 가능합니다.");
                }
                break;
                
            case "크리티컬":
                    user.statpoint -= cmd[2];
                    user.statpoint_crt += cmd[2];
                    break;
            case "3":
                    user.statpoint -= cmd[2];
                    user.statpoint_crt += cmd[2];
                    break;

            case "마나":
                user.statpoint -= cmd[2];
                user.statpoint_mp += cmd[2];
                break;
            case "4":
                user.statpoint -= cmd[2];
                user.statpoint_mp += cmd[2];
                break;
       
            default:
                replier.reply("없는 스탯입니다.");
                return;
        }

        replier.reply(cmd[1] + " 스탯을 " + cmd[2] + "만큼 올렸습니다.");
        savePlayer(user, sender);
        return;
    }
    
    // 명령어: 명령어 목록(help)
    if(cmd[0] === "명령어") {
        replier.reply(
            "전체 명령어 목록"
            + "\n\n" + "\u200b".repeat(500)
            + "\n\n*내정보 / 유저의 모든 정보를 확인합니다."
            + "\n\n*스탯 / 유저의 스탯 정보를 확인합니다."
            + "\n\n*장소 (던전/레이드) / 해당 종류의 장소 목록을 확인합니다."
            + "\n\n*랭킹 (레벨/등급) / 전체 랭킹을 확인합니다."
            + "\n\n*회복 / 유저의 HP/MP를 회복합니다."
            + "\n\n*인벤토리 / 인벤토리를 확인합니다."
            + "\n\n*정보 (아이템id) / 해당 아이템의 상세정보를 확인합니다. 상자일 경우, 획득 가능한 아이템과 확률이 보여지며 일반 아이템의 경우, 획득처가 보여집니다. 일부 아이템은 정보가 없을 수 있습니다."
            + "\n\n*장소 이동 (ID) / 해당 ID의 장소로 이동합니다."
            + "\n\n*사용 (ID) / 해당 아이템을 사용합니다."
            + "\n\n*(판매/구매) (ID) (갯수) / 해당 아이템을 판매, 구매합니다."
            + "\n\n*룬 / 룬 관련 명령어를 확인합니다. (준비중)"
            + "\n\n*스킬 / 스킬 관련 명령어를 확인합니다."
            + "\n\n*장비 / 장비 관련 명령어를 확인합니다."
            + "\n\n*거래 / 유저간 1:1 거래를 진행합니다. 단, 거래채널에서만 거래가 가능합니다."
            + "\n\n*출석 / 출석체크를 진행하여 보상을 획득합니다. 연속출석시 추가보상을 획득합니다."
            + "\n\n*조합 / 아이템 조합법을 확인합니다."
        );

        return;
    }

    // 명령어: 인벤토리
    if (cmd[0] === "인벤토리") {
           replier.reply(sender + "님의 인벤토리\n\n" + "\u200b".repeat(500) + "\n\n*사용 (id) = 아이템 사용 (상자일경우 개봉)\n*정보 (id) = 상자 드랍템 정보 확인"
           + "\n\n[☆] 출석 랜덤박스 (ID 0) × " + user.box_event
           + "\n하급 HP 물약 (ID 1) × " + user.hp_potion_s
           + "\n중급 HP 물약 (ID 2) × " + user.hp_potion_m
           + "\n상급 HP 물약 (ID 3) × " + user.hp_potion_l
           + "\n\n하급 MP 물약 (ID 4) × " + user.mp_potion_s
           + "\n중급 MP 물약 (ID 5) × " + user.mp_potion_m
           + "\n상급 MP 물약 (ID 6) × " + user.mp_potion_l
           + "\n\n하급 강화석 (ID 11) × " + user.stone_s
           + "\n중급 강화석 (ID 12) × " + user.stone_m
           + "\n상급 강화석 (ID 13) × " + user.stone_l
           + "\n\n하급 스타박스 설계도 (ID 21) × " + user.star_print_ss
           + "\n일반 스타박스 설계도 (ID 22) × " + user.star_print_s
           + "\n고급 스타박스 설계도 (ID 23) × " + user.star_print_m
           + "\n최고급 스타박스 설계도 (ID 24) × " + user.star_print_l
           + "\n전설급 스타박스 설계도 (ID 25) × " + user.star_print_ll
           + "\n\n노말 랜덤박스 (ID 31) × " + user.normal_box
           + "\n프리미엄 랜덤박스 (ID 32) × " + user.premium_box
           + "\n찬란한 프리미엄 랜덤박스 (ID 33) × " + user.starlight_box
           + "\n\n스타박스 S (ID 41) × " + user.box_star_s
           + "\n스타박스 M (ID 42) × " + user.box_star_m
           + "\n스타박스 L (ID 43) × " + user.box_star_l
           );
        return;
    }
    
    if(user.hp_total > user.hpmax_total){
        hpset = (user.hp_total - user.hpmax_total);
        user.hp -= hpset;
        savePlayer(user, sender);
    }
    
    
if(msg == "*스탯초기화"){
    replier.reply("스탯이 자동 초기화 되었습니다.\n\n스탯을 새로 올려주세요!");
    user.statpoint += (user.statpoint_hp + user.statpoint_crt + user.statpoint_atk + user.statpoint_mp);
    user.statpoint_hp = 0;
    user.statpoint_atk = 0;
    user.statpoint_crt = 0;
    user.statpoint_mp = 0;
    savePlayer(user, sender);
}

    // 명령어: 장소
    if (cmd[0] === "장소") {
        switch(cmd[1]){
            case "던전":
                replier.reply(
                    "- 일반 던전 목록 (A구역) -\n" + "\u200b".repeat(500)
                    + "\n장소 이동 방법 : *장소 이동 (ID)"
                    + "\n\n\n마을 뒷산 [ID 1]"
                    + "\n필요 레벨 : 1 ~ 3O"
                    + "\n\n오크 캠프 [ID 2]"
                    + "\n필요 레벨 : 31 ~ 6O"
                    + "\n\n에메랄드 숲 [ID 3]"
                    + "\n필요 레벨 : 61 ~ 1OO"
                    + "\n\n성스러운 계곡 [ID 4]"
                    + "\n필요 레벨 : 1O1 ~ 15O"
                    + "\n\n황야의 폭포 [ID 5]"
                    + "\n필요 레벨 : 151 ~ 2OO"
                    + "\n\n고요한 사막 [ID 6]"
                    + "\n필요 레벨 : 2O1 ~ 25O"
                    + "\n\n눈내린 사막 [ID 7]"
                    + "\n필요 레벨 : 251 ~ 3OO"
                    + "\n\n설산 입구 [ID 8]"
                    + "\n필요 레벨 : 3O1 ~ 35O"
                    + "\n\n설산 신전 [ID 9]"
                    + "\n필요 레벨 : 351 ~ 4OO"
                    + "\n\n흰눈 덮인 만년설 [ID 1O]"
                    + "\n필요 레벨 : 4O1 ~ 45O"
                    + "\n\n얼어붙은 바다 [ID 11]"
                    + "\n필요 레벨 : 451 ~ 5OO"
                    + "\n\n독안개 해변 [ID 12]"
                    + "\n필요 레벨 : 5O1 ~ 6OO"
                    + "\n[ ! ] 필드 특성 : 독 - 사냥이 진행되는동안 주기적으로 독 데미지를 입습니다."
                    + "\n\n독성 위험지대 [ID 13]"
                    + "\n필요 레벨 : 6O1 ~ 7OO"
                    + "\n[ ! ] 필드 특성 : 맹독 - 15 ~ 50% 강화된 독 데미지를 입습니다."
                    + "\n\n버려진 광맥 [ID 14]"
                    + "\n필요 레벨 : 7O1 ~ 8OO"
                    + "\n[ ! ] 필드 특성 : 저항 - 몬스터들이 크리티컬 데미지를 흡수합니다."
                    + "\n[ ! ] 필드 특성 : 고난 - 몬스터들이 난폭해집니다."
                    + "\n\n잊혀진 포탈룸 [ID 15]"
                    + "\n필요 레벨 : 8O1 ~ 1OOO"
                    + "\n[ ! ] 필드 특성 : 흡수 - 크리티컬 공격이 아닐경우 몬스터가 체력을 회복합니다."
                    + "\n[ ! ] 필드 특성 : 끝 - 해당 던전이 A구역 마지막 던전입니다. 1OOO레벨 달성 후 사냥시 1% 확률로 열쇠를 획득할 수 있고, 열쇠를 일정갯수만큼 모아 B구역 던전에 진입할 수 있습니다."
                    + "\n\n\n\n- 일반 던전 목록 (B구역) -"
                    + "\n\n\n??? [ID 16]"
                    + "\n필요 레벨 : 1OO1 ~ 125O"
                    + "\n[ ! ] 필드 특성 : ???"
                    + "\n\n\n\n(잠김) 지하실 [ID ?]"
                    + "\n잠금해제까지 1O 남음"
                );
                break;

            case "레이드":
                replier.reply("- 레이드 던전 목록 -\n" + "\u200b".repeat(500)
                    + "\n장소 이동 방법 : *장소 이동 (ID)"
                    + "\n\n\n추가 예정 : 얼어붙은 협곡 [ID 41]"
                    + "\n");
                break;

            case "이동": // 왠지 직접 if, else if 문으로 다 추가하실 느낌이라 미리 방지해놨습니다.
                // movable, 즉 이동 가능한 장소 ID 배열에 cmd[2]가 포함된다면 === 입력한 ID가 이동 가능한 장소 ID라면
                if(movable.includes(cmd[2])){
                  if(cmd[2] <= 40){
                    replier.reply(
                        "ID " + cmd[2] + " 장소로 이동했습니다!"
                        + "\n\n*사냥 으로 몬스터를 사냥하세요!" //*탐색 으로 주변 아이템을 찾아볼 수 있습니다!"
                    );

                    user.location = +cmd[2]; // 위치 정보 갱신
                    user.monster_id = 0; // 전투 중인 몬스터 정보 초기화

                    savePlayer(user, sender);
                    }
                    else {
                      replier.reply(
                        "ID " + cmd[2] + " 장소로 이동했습니다!"
                        + "\n\n*보스목록 으로 토벌할 보스를 확인/사냥하실 수 있습니다."
                    );

                    user.location = +cmd[2]; // 위치 정보 갱신
                    user.attack_monster = 10; // 전투 중인 몬스터 정보 초기화

                    savePlayer(user, sender);
                    }
                } else {
                    replier.reply("이동할 수 없는 장소입니다.");
                }
                break;

            default:
                replier.reply("*장소 (던전/레이드)로 장소 목록을 확인하세요!");
        }

        return;
    }
    
    if (msg == "*컴파일") {
      replier.reply(Api.compile());
    }
    
    if(msg == "*아티팩트"){
      if(user.AF_s == undefined){
        replier.reply("(아티팩트 1차 업데이트)\n자동 업데이트 완료.");
        user.AF_hp = 0;
        user.AF_hp_lv = 0;
        user.AF_atk = 0;
        user.AF_atk_lv = 0;
        user.AF_crt = 0;
        user.AF_crt_lv = 0;
        user.AF_mp = 0;
        user.AF_mp_lv = 0;
        user.AF_s = 0;
        user.AF_m = 0;
        user.AF_l = 0;
        user.AF_rank = "𝐋𝐄𝐕𝐄𝐋 𝐃";
        user.AF_level_total = 0;
        user.AF_level_limit = 20;
        savePlayer(user, sender);
      }
      
      replier.reply("<아티팩트 명령어 목록>\n\n\n*아티팩트 정보 / 현재 본인의 모든 아티팩트 정보를 확인합니다."
      + "\n\n*아티팩트 강화 (id) / 해당 id의 아티팩트를 강화합니다.\n\n*아티팩트 진화 / 아티팩트 등급을 진화시키고, 강화가능한 아티팩트 강화값 최대치를 늘립니다.");
    }
    
    if (cmd[0] == "아티팩트"){
      /*if(isNaN(cmd[2])){
        
      }*/
      switch(cmd[1]){
        case "정보":
            replier.reply(sender + "님의 아티팩트 정보\n\n" + "\u200b".repeat(500) + "\n\n아티팩트 종합 티어 : " + user.AF_rank
            + "\n\n남은 강화가능횟수 : " + user.AF_level_limit
            + "\n현재 누적강화횟수 : " + user.AF_level_total
            + "\n\n아티팩트 가루 (id 51) × " + user.AF_s
            + "\n아티팩트 조각 (id 52) × " + user.AF_m
            + "\n아티팩트 수정 (id 53) × " + user.AF_l
            + "\n\n\n- 체력 아티팩트 [+" + user.AF_hp_lv + "] / ID 1 -"
            + "\n효과 : HP + " + user.AF_hp
            + "\n\n<강화 재료>\n-> 아티팩트 가루 × " + (20 + user.AF_hp_lv * 2)
            + "\n-> 아티팩트 조각 × " + (5 + Math.floor(user.AF_hp_lv / 3))
            + "\n-> 아티팩트 수정 × " + Math.floor(user.AF_hp_lv / 20)
            + "\n-> " + (500 + user.AF_hp_lv * 50) + " G"
            + "\n-> " + (40 + Math.round(user.AF_hp_lv * 2.5)) + " STAR"
           
            
            + "\n\n\n- 공격력 아티팩트 [+" + user.AF_atk_lv + "] / ID 2 -"
            + "\n효과 : ATK + " + user.AF_atk
            + "\n\n<강화 재료>\n-> 아티팩트 가루 × " + (20 + user.AF_atk_lv * 3)
            + "\n-> 아티팩트 조각 × " + (6 + Math.floor(user.AF_atk_lv / 3))
            + "\n-> 아티팩트 수정 × " + Math.floor(user.AF_atk_lv / 15)
            + "\n-> " + (600 + user.AF_atk_lv * 50) + " G"
            + "\n-> " + (40 + Math.round(user.AF_atk_lv * 3.5)) + " STAR"
            
            
            + "\n\n\n- 크리티컬 아티팩트 [+" + user.AF_crt_lv + "] / ID 3 -"
            + "\n효과 : CRT.DMG + " + (user.AF_crt / 300) + "%p"
            + "\n          CRT.% + " + (user.AF_crt / 10000) + "%p"
            + "\n\n<강화 재료>\n-> 아티팩트 가루 × " + (20 + user.AF_crt_lv * 3)
            + "\n-> 아티팩트 조각 × " + (5 + Math.floor(user.AF_crt_lv / 3))
            + "\n-> 아티팩트 수정 × " + Math.floor(user.AF_crt_lv / 15)
            + "\n-> " + (800 + user.AF_crt_lv * 60) + " G"
            + "\n-> " + (40 + Math.round(user.AF_crt_lv * 3.5)) + " STAR"
            );
            break;
            
        case "진화":
          if(user.AF_level_limit !== 0){
            replier.reply("아티팩트를 " + user.AF_level_limit + "회 더 강화하여 다음 티어를 개방하세요!");
          }
          
          else {
            if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐃"){
              if(user.STAR >= 700 && user.gold >= 5000 && user.level >= 50){
                replier.reply("아래 재료를 소모하여 아티팩트 티어를 C등급으로 진화시켰습니다!\n\n- LEVEL 50+\n- 5,000 G\n- 700 STAR\n\n// REWARD //\n200 아티팩트 가루\n50 아티팩트 조각\n2 아티팩트 수정");
                user.STAR -= 700;
                user.gold -= 5000;
                user.AF_s += 200;
                user.AF_m += 50;
                user.AF_l += 2;
                user.AF_rank = "𝐋𝐄𝐕𝐄𝐋 𝐂";
                user.AF_level_limit = 30;
                savePlayer(user, sender);
              }
              else{
                replier.reply("진화 재료가 부족합니다.\n\nC등급 진화 필요재료\n- LEVEL 50+\n- 5,000 G\n- 700 STAR");
              }
            }
            
            else if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐂"){
              if(user.STAR >= 2000 && user.gold >= 15000 && user.level >= 200){
                replier.reply("아래 재료를 소모하여 아티팩트 티어를 B등급으로 진화시켰습니다!\n\n- LEVEL 200+\n- 15,000 G\n- 2,000 STAR\n\n// REWARD //\n300 아티팩트 가루\n70 아티팩트 조각\n3 아티팩트 수정");
                user.STAR -= 2000;
                user.gold -= 15000;
                user.AF_s += 300;
                user.AF_m += 70;
                user.AF_l += 3;
                user.AF_rank = "𝐋𝐄𝐕𝐄𝐋 𝐁";
                user.AF_level_limit = 50;
                savePlayer(user, sender);
              }
              else{
                replier.reply("진화 재료가 부족합니다.\n\nB등급 진화 필요재료\n- LEVEL 200+\n- 15,000 G\n- 2,000 STAR");
              }
            }
            
            else if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐁"){
              if(user.STAR >= 5000 && user.gold >= 40000 && user.level >= 500 && user.AF_l >= 10){
                replier.reply("아래 재료를 소모하여 아티팩트 티어를 A등급으로 진화시켰습니다!\n\n- LEVEL 500+\n- 40,000 G\n- 5,000 STAR\n- 10 아티팩트 수정\n\n// REWARD //\n20 고급 HP 물약");
                user.STAR -= 5000;
                user.gold -= 40000;
                user.AF_l -= 10;
                user.hp_potion_l += 20;
                user.AF_rank = "𝐋𝐄𝐕𝐄𝐋 𝐀";
                user.AF_level_limit = 80;
                savePlayer(user, sender);
              }
              else{
                replier.reply("진화 재료가 부족합니다.\n\nB등급 진화 필요재료\n- LEVEL 500+\n- 40,000 G\n- 5,000 STAR\n- 10 아티팩트 수정");
              }
            }
          }
          break;
        case "강화":
          switch(cmd[2]){
            case "1":
              if(user.AF_level_limit > 0){
              if(user.AF_hp_lv < 20){ AFhp = 40; }
              else if(user.AF_hp_lv < 40){ AFhp = 85; }
              else if(user.AF_hp_lv < 60){ AFhp = 160; }
              else if(user.AF_hp_lv < 80){ AFhp = 250; }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐃"){
              if(user.AF_hp_lv < 10){
              if(user.AF_s >= (20 + user.AF_hp_lv * 2) && user.AF_m >= 5 + Math.round(user.AF_hp_lv / 3) && user.AF_l >= Math.floor(user.AF_hp_lv / 20) && user.gold >= (500 + user.AF_hp_lv * 50) && user.STAR >= (40 + Math.round(user.AF_hp_lv * 2.5))){
                replier.reply("체력 아티팩트 강화 완료!\n\n+" + user.AF_hp_lv + " >>> +" + (user.AF_hp_lv + 1) + "\nHP | +" + user.AF_hp + " >>> +" + (user.AF_hp + AFhp));
                user.AF_s -= (20 + user.AF_hp_lv * 2);
                user.AF_m -= (5 + Math.round(user.AF_hp_lv / 3));
                user.AF_l -= Math.floor(user.AF_hp_lv / 20);
                user.gold -= (500 + 50 * user.AF_hp_lv);
                user.STAR -= (40 + Math.round(user.AF_hp_lv * 2.5));
                user.AF_hp_lv += 1;
                user.AF_hp += AFhp;
                user.hp += AFhp;
                user.hpmax += AFhp;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 D등급 기준, 각 아티팩트의 최대 레벨은 10을 초과할 수 없습니다.");
              }
          }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐂"){
              if(user.AF_hp_lv < 25){
              if(user.AF_s >= (20 + user.AF_hp_lv * 2) && user.AF_m >= 5 + Math.round(user.AF_hp_lv / 3) && user.AF_l >= Math.floor(user.AF_hp_lv / 20) && user.gold >= (500 + user.AF_hp_lv * 50) && user.STAR >= (40 + Math.round(user.AF_hp_lv * 2.5))){
                replier.reply("체력 아티팩트 강화 완료!\n\n+" + user.AF_hp_lv + " >>> +" + (user.AF_hp_lv + 1) + "\nHP | +" + user.AF_hp + " >>> +" + (user.AF_hp + AFhp));
                user.AF_s -= (20 + user.AF_hp_lv * 2);
                user.AF_m -= (5 + Math.round(user.AF_hp_lv / 3));
                user.AF_l -= Math.floor(user.AF_hp_lv / 20);
                user.gold -= (500 + 50 * user.AF_hp_lv);
                user.STAR -= (40 + Math.round(user.AF_hp_lv * 2.5));
                user.AF_hp_lv += 1;
                user.AF_hp += AFhp;
                user.hp += AFhp;
                user.hpmax += AFhp;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 C등급 기준, 각 아티팩트의 최대 레벨은 25를 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐁"){
              if(user.AF_hp_lv < 50){
              if(user.AF_s >= (20 + user.AF_hp_lv * 2) && user.AF_m >= 5 + Math.round(user.AF_hp_lv / 3) && user.AF_l >= Math.floor(user.AF_hp_lv / 20) && user.gold >= (500 + user.AF_hp_lv * 50) && user.STAR >= (40 + Math.round(user.AF_hp_lv * 2.5))){
                replier.reply("체력 아티팩트 강화 완료!\n\n+" + user.AF_hp_lv + " >>> +" + (user.AF_hp_lv + 1) + "\nHP | +" + user.AF_hp + " >>> +" + (user.AF_hp + AFhp));
                user.AF_s -= (20 + user.AF_hp_lv * 2);
                user.AF_m -= (5 + Math.round(user.AF_hp_lv / 3));
                user.AF_l -= Math.floor(user.AF_hp_lv / 20);
                user.gold -= (500 + 50 * user.AF_hp_lv);
                user.STAR -= (40 + Math.round(user.AF_hp_lv * 2.5));
                user.AF_hp_lv += 1;
                user.AF_hp += AFhp;
                user.hp += AFhp;
                user.hpmax += AFhp;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 B등급 기준, 각 아티팩트의 최대 레벨은 50을 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐀"){
              if(user.AF_hp_lv < 80){
              if(user.AF_s >= (20 + user.AF_hp_lv * 2) && user.AF_m >= 5 + Math.round(user.AF_hp_lv / 3) && user.AF_l >= Math.floor(user.AF_hp_lv / 20) && user.gold >= (500 + user.AF_hp_lv * 50) && user.STAR >= (40 + Math.round(user.AF_hp_lv * 2.5))){
                replier.reply("체력 아티팩트 강화 완료!\n\n+" + user.AF_hp_lv + " >>> +" + (user.AF_hp_lv + 1) + "\nHP | +" + user.AF_hp + " >>> +" + (user.AF_hp + AFhp));
                user.AF_s -= (20 + user.AF_hp_lv * 2);
                user.AF_m -= (5 + Math.round(user.AF_hp_lv / 3));
                user.AF_l -= Math.floor(user.AF_hp_lv / 20);
                user.gold -= (500 + 50 * user.AF_hp_lv);
                user.STAR -= (40 + Math.round(user.AF_hp_lv * 2.5));
                user.AF_hp_lv += 1;
                user.AF_hp += AFhp;
                user.hp += AFhp;
                user.hpmax += AFhp;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 A등급 기준, 각 아티팩트의 최대 레벨은 80을 초과할 수 없습니다.");
              }
          }
          }
          else{
            replier.reply("남은 강화횟수가 소진되어 더이상 강화가 불가능합니다.\n\n아티팩트를 진화하여 다음 강화레벨을 개방하세요!");
          }
          break;
          
        case "2":
          if(user.AF_level_limit > 0){
              if(user.AF_atk_lv < 20){ AFatk = 4; }
              else if(user.AF_atk_lv < 40){ AFatk = 9; }
              else if(user.AF_atk_lv < 60){ AFatk = 17; }
              else if(user.AF_atk_lv < 80){ AFatk = 35; }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐃"){
              if(user.AF_atk_lv < 10){
              if(user.AF_s >= (20 + user.AF_atk_lv * 3) && user.AF_m >= 6 + Math.round(user.AF_atk_lv / 3) && user.AF_l >= Math.floor(user.AF_atk_lv / 15) && user.gold >= (600 + user.AF_atk_lv * 50) && user.STAR >= (40 + Math.round(user.AF_atk_lv * 3.5))){
                replier.reply("공격력 아티팩트 강화 완료!\n\n+" + user.AF_atk_lv + " >>> +" + (user.AF_atk_lv + 1) + "\nATK | +" + user.AF_atk + " >>> +" + (user.AF_atk + AFatk));
                user.AF_s -= (20 + user.AF_atk_lv * 3);
                user.AF_m -= (6 + Math.round(user.AF_atk_lv / 3));
                user.AF_l -= Math.floor(user.AF_atk_lv / 15);
                user.gold -= (600 + 50 * user.AF_atk_lv);
                user.STAR -= (40 + Math.round(user.AF_atk_lv * 3.5));
                user.AF_atk_lv += 1;
                user.AF_atk += AFatk;
                user.atk += AFatk;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 D등급 기준, 각 아티팩트의 최대 레벨은 10을 초과할 수 없습니다.");
              }
          }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐂"){
              if(user.AF_atk_lv < 25){
              if(user.AF_s >= (20 + user.AF_atk_lv * 3) && user.AF_m >= 6 + Math.round(user.AF_atk_lv / 3) && user.AF_l >= Math.floor(user.AF_atk_lv / 15) && user.gold >= (600 + user.AF_atk_lv * 50) && user.STAR >= (40 + Math.round(user.AF_atk_lv * 3.5))){
                replier.reply("공격력 아티팩트 강화 완료!\n\n+" + user.AF_atk_lv + " >>> +" + (user.AF_atk_lv + 1) + "\nATK | +" + user.AF_atk + " >>> +" + (user.AF_atk + AFatk));
                user.AF_s -= (20 + user.AF_atk_lv * 3);
                user.AF_m -= (6 + Math.round(user.AF_atk_lv / 3));
                user.AF_l -= Math.floor(user.AF_atk_lv / 15);
                user.gold -= (600 + 50 * user.AF_atk_lv);
                user.STAR -= (40 + Math.round(user.AF_atk_lv * 3.5));
                user.AF_atk_lv += 1;
                user.AF_atk += AFatk;
                user.atk += AFatk;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 C등급 기준, 각 아티팩트의 최대 레벨은 25를 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐁"){
              if(user.AF_atk_lv < 50){
              if(user.AF_s >= (20 + user.AF_atk_lv * 3) && user.AF_m >= 6 + Math.round(user.AF_atk_lv / 3) && user.AF_l >= Math.floor(user.AF_atk_lv / 15) && user.gold >= (600 + user.AF_atk_lv * 50) && user.STAR >= (40 + Math.round(user.AF_atk_lv * 3.5))){
                replier.reply("공격력 아티팩트 강화 완료!\n\n+" + user.AF_atk_lv + " >>> +" + (user.AF_atk_lv + 1) + "\nATK | +" + user.AF_atk + " >>> +" + (user.AF_atk + AFatk));
                user.AF_s -= (20 + user.AF_atk_lv * 3);
                user.AF_m -= (6 + Math.round(user.AF_atk_lv / 3));
                user.AF_l -= Math.floor(user.AF_atk_lv / 15);
                user.gold -= (600 + 50 * user.AF_atk_lv);
                user.STAR -= (40 + Math.round(user.AF_atk_lv * 3.5));
                user.AF_atk_lv += 1;
                user.AF_atk += AFatk;
                user.atk += AFatk;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 B등급 기준, 각 아티팩트의 최대 레벨은 50을 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐀"){
              if(user.AF_atk_lv < 80){
              if(user.AF_s >= (20 + user.AF_atk_lv * 3) && user.AF_m >= 6 + Math.round(user.AF_atk_lv / 3) && user.AF_l >= Math.floor(user.AF_atk_lv / 15) && user.gold >= (600 + user.AF_atk_lv * 50) && user.STAR >= (40 + Math.round(user.AF_atk_lv * 3.5))){
                replier.reply("공격력 아티팩트 강화 완료!\n\n+" + user.AF_atk_lv + " >>> +" + (user.AF_atk_lv + 1) + "\nATK | +" + user.AF_atk + " >>> +" + (user.AF_atk + AFatk));
                user.AF_s -= (20 + user.AF_atk_lv * 3);
                user.AF_m -= (6 + Math.round(user.AF_atk_lv / 3));
                user.AF_l -= Math.floor(user.AF_atk_lv / 15);
                user.gold -= (600 + 50 * user.AF_atk_lv);
                user.STAR -= (40 + Math.round(user.AF_atk_lv * 3.5));
                user.AF_atk_lv += 1;
                user.AF_atk += AFatk;
                user.atk += AFatk;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 A등급 기준, 각 아티팩트의 최대 레벨은 80을 초과할 수 없습니다.");
              }
          }
          }
          else{
            replier.reply("남은 강화횟수가 소진되어 더이상 강화가 불가능합니다.\n\n아티팩트를 진화하여 다음 강화레벨을 개방하세요!");
          }
          break;
          
      case "3":
          if(user.AF_level_limit > 0){
              if(user.AF_crt_lv < 20){ AFcrt = 30; }
              else if(user.AF_crt_lv < 40){ AFcrt = 60; }
              else if(user.AF_crt_lv < 60){ AFcrt = 105; }
              else if(user.AF_crt_lv < 80){ AFcrt = 150; }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐃"){
              if(user.AF_crt_lv < 10){
              if(user.AF_s >= (20 + user.AF_crt_lv * 3) && user.AF_m >= 5 + Math.round(user.AF_crt_lv / 3) && user.AF_l >= Math.floor(user.AF_crt_lv / 15) && user.gold >= (800 + user.AF_crt_lv * 50) && user.STAR >= (40 + Math.round(user.AF_crt_lv * 3.5))){
                replier.reply("크리티컬 아티팩트 강화 완료!\n\n+" + user.AF_crt_lv + " >>> +" + (user.AF_crt_lv + 1) + "\nCRT.% | +" + (user.AF_crt / 10000) + " >>> +" + ((user.AF_crt + AFcrt) / 10000) + "\nCRT.DAM | +" + (user.AF_crt / 300) + " >>> +" + ((user.AF_crt + AFcrt) / 300));
                user.AF_s -= (20 + user.AF_crt_lv * 3);
                user.AF_m -= (5 + Math.round(user.AF_crt_lv / 3));
                user.AF_l -= Math.floor(user.AF_crt_lv / 15);
                user.gold -= (800 + 50 * user.AF_crt_lv);
                user.STAR -= (40 + Math.round(user.AF_crt_lv * 3.5));
                user.AF_crt_lv += 1;
                user.AF_crt += AFcrt;
                user.cri_dam += Math.round(AFcrt / 30);
                user.cri_per += AFcrt;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 D등급 기준, 각 아티팩트의 최대 레벨은 10을 초과할 수 없습니다.");
              }
          }
              if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐂"){
              if(user.AF_crt_lv < 25){
              if(user.AF_s >= (20 + user.AF_crt_lv * 3) && user.AF_m >= 5 + Math.round(user.AF_crt_lv / 3) && user.AF_l >= Math.floor(user.AF_crt_lv / 15) && user.gold >= (800 + user.AF_crt_lv * 50) && user.STAR >= (40 + Math.round(user.AF_crt_lv * 3.5))){
                replier.reply("크리티컬 아티팩트 강화 완료!\n\n+" + user.AF_crt_lv + " >>> +" + (user.AF_crt_lv + 1) + "\nCRT.% | +" + (user.AF_crt / 10000) + " >>> +" + ((user.AF_crt + AFcrt) / 10000) + "\nCRT.DAM | +" + (user.AF_crt / 300) + " >>> +" + ((user.AF_crt + AFcrt) / 300));
                user.AF_s -= (20 + user.AF_crt_lv * 3);
                user.AF_m -= (5 + Math.round(user.AF_crt_lv / 3));
                user.AF_l -= Math.floor(user.AF_crt_lv / 15);
                user.gold -= (800 + 50 * user.AF_crt_lv);
                user.STAR -= (40 + Math.round(user.AF_crt_lv * 3.5));
                user.AF_crt_lv += 1;
                user.AF_crt += AFcrt;
                user.cri_dam += Math.round(AFcrt / 30);
                user.cri_per += AFcrt;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 C등급 기준, 각 아티팩트의 최대 레벨은 25를 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐁"){
              if(user.AF_crt_lv < 50){
              if(user.AF_s >= (20 + user.AF_crt_lv * 3) && user.AF_m >= 5 + Math.round(user.AF_crt_lv / 3) && user.AF_l >= Math.floor(user.AF_crt_lv / 15) && user.gold >= (800 + user.AF_crt_lv * 50) && user.STAR >= (40 + Math.round(user.AF_crt_lv * 3.5))){
                replier.reply("크리티컬 아티팩트 강화 완료!\n\n+" + user.AF_crt_lv + " >>> +" + (user.AF_crt_lv + 1) + "\nCRT.% | +" + (user.AF_crt / 10000) + " >>> +" + ((user.AF_crt + AFcrt) / 10000) + "\nCRT.DAM | +" + (user.AF_crt / 300) + " >>> +" + ((user.AF_crt + AFcrt) / 300));
                user.AF_s -= (20 + user.AF_crt_lv * 3);
                user.AF_m -= (5 + Math.round(user.AF_crt_lv / 3));
                user.AF_l -= Math.floor(user.AF_crt_lv / 15);
                user.gold -= (800 + 50 * user.AF_crt_lv);
                user.STAR -= (40 + Math.round(user.AF_crt_lv * 3.5));
                user.AF_crt_lv += 1;
                user.AF_crt += AFcrt;
                user.cri_dam += Math.round(AFcrt / 30);
                user.cri_per += AFcrt;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 B등급 기준, 각 아티팩트의 최대 레벨은 50을 초과할 수 없습니다.");
              }
          }
          
          if(user.AF_rank == "𝐋𝐄𝐕𝐄𝐋 𝐀"){
              if(user.AF_crt_lv < 80){
              if(user.AF_s >= (20 + user.AF_crt_lv * 3) && user.AF_m >= 5 + Math.round(user.AF_crt_lv / 3) && user.AF_l >= Math.floor(user.AF_crt_lv / 15) && user.gold >= (800 + user.AF_crt_lv * 50) && user.STAR >= (40 + Math.round(user.AF_crt_lv * 3.5))){
                replier.reply("크리티컬 아티팩트 강화 완료!\n\n+" + user.AF_crt_lv + " >>> +" + (user.AF_crt_lv + 1) + "\nCRT.% | +" + (user.AF_crt / 10000) + " >>> +" + ((user.AF_crt + AFcrt) / 10000) + "\nCRT.DAM | +" + (user.AF_crt / 300) + " >>> +" + ((user.AF_crt + AFcrt) / 300));
                user.AF_s -= (20 + user.AF_crt_lv * 3);
                user.AF_m -= (5 + Math.round(user.AF_crt_lv / 3));
                user.AF_l -= Math.floor(user.AF_crt_lv / 15);
                user.gold -= (800 + 50 * user.AF_crt_lv);
                user.STAR -= (40 + Math.round(user.AF_crt_lv * 3.5));
                user.AF_crt_lv += 1;
                user.AF_crt += AFcrt;
                user.cri_dam += Math.round(AFcrt / 30);
                user.cri_per += AFcrt;
                user.AF_level_limit -= 1;
                user.AF_level_total += 1;
                savePlayer(user, sender);
              }
              else{
                replier.reply("강화 재료가 부족합니다.");
              }
              }
              else{
                replier.reply("[ ! ] 아티팩트 A등급 기준, 각 아티팩트의 최대 레벨은 80을 초과할 수 없습니다.");
              }
          }
          }
          else{
            replier.reply("남은 강화횟수가 소진되어 더이상 강화가 불가능합니다.\n\n아티팩트를 진화하여 다음 강화레벨을 개방하세요!");
          }
          break;
          }
      }
    }

    // --------------------------------------------------------------------------------------
    // ------------------------ 여기까지 수정함(아래는 공사중) -------------------------------
    // --------------------------------------------------------------------------------------
    
    // 명령어: 사냥
    // 실제 사냥 부분도 그냥 여기에 넣어버렸습니다......!
    // switch문
    if (cmd[0] === "사냥" && user.heal == false && user.attack_monster !== 1 && user.attack_monster !== 2) {
        // 사냥 대상을 지정하지 않았다면 사냥 가능 목록을 띄움
        if (!cmd[1]) {
            switch(user.location){
                case 1:
                    if(user.level <= 30){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 1 ~ 15] 녹색 슬라임 (id 1)\nHP 455 / ATK 61"
                            + "\n\n-> [Lv 16 ~ 30] 빨간 달팽이 (id 2)\nHP 990 / ATK 83"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 엘피런스 (id 3)\nHP 15,000 / ATK 149"
                            //+ "\n\n획득 가능 아이템"
                            //+ "\n<하급 몬스터의 잔해>"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "녹색 슬라임";
                        user.monster_exp_1 = 2240;
                        user.monster_name_2 = "빨간 달팽이";
                        user.monster_exp_2 = 3080;
                        user.monster_name_3 = "엘피런스";
                        user.monster_exp_3 = 8200;
                        savePlayer(user, sender);
                    }
                    break;
                    
               case 2:
                    if(user.level > 30 && user.level <= 60){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 31 ~ 45] 돌도끼 오크 (id 1)\nHP 1575 / ATK 97"
                            + "\n\n-> [Lv 46 ~ 60] 사슬갑주 오크 (id 2)\nHP 2990 / ATK 113"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 변종 철갑주 오크 (id 3)\nHP 40,000 / ATK 149"
                            //+ "\n\n획득 가능 아이템"
                            //+ "\n<하급 몬스터의 잔해>"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "돌도끼 오크";
                        user.monster_exp_1 = 6470;
                        user.monster_name_2 = "사슬갑주 오크";
                        user.monster_exp_2 = 10140;
                        user.monster_name_3 = "변종 철갑주 오크";
                        user.monster_exp_3 = 15200;
                        savePlayer(user, sender);
                    }
                    break;
                    
               case 3:
                    if(user.level > 60 && user.level <= 100){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 61 ~ 80] 나무 정령 (id 1)\nHP 3820 / ATK 119"
                            + "\n\n-> [Lv 81 ~ 100] 돌연변이 곰 (id 2)\nHP 5495 / ATK 133"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 에메랄드 드래곤 (id 3)\nHP 80,000 / ATK 171"
                            //+ "\n\n획득 가능 아이템"
                            //+ "\n<하급 몬스터의 잔해>"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "나무 정령";
                        user.monster_exp_1 = 21280;
                        user.monster_name_2 = "돌연변이 곰";
                        user.monster_exp_2 = 33410;
                        user.monster_name_3 = "에메랄드 드래곤";
                        user.monster_exp_3 = 47500;
                        savePlayer(user, sender);
                    }
                    break;
                    
                    case 4:
                    if(user.level > 100 && user.level <= 150){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 101 ~ 125] 수호 천사 (id 1)\nHP 6965 / ATK 139"
                            + "\n\n-> [Lv 126 ~ 150] 성령의 전사 (id 2)\nHP 8755 / ATK 145"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 성전의 대여사제 (id 3)\nHP 125,000 / ATK 188"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "수호 천사";
                        user.monster_exp_1 = 56550;
                        user.monster_name_2 = "성령의 전사";
                        user.monster_exp_2 = 68890;
                        user.monster_name_3 = "성전의 대여사제";
                        user.monster_exp_3 = 127500;
                        savePlayer(user, sender);
                    }
                    break;
                    
                    case 5:
                    if(user.level > 150 && user.level <= 200){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 151 ~ 175] 사막의 수호자 (id 1)\nHP 10265 / ATK 155"
                            + "\n\n-> [Lv 176 ~ 200] 폭포의 요정 (id 2)\nHP 11855 / ATK 162"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 모래바람의 약탈자 (id 3)\nHP 175,000 / ATK 201"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "사막의 수호자";
                        user.monster_exp_1 = 82850;
                        user.monster_name_2 = "폭포의 요정";
                        user.monster_exp_2 = 101340;
                        user.monster_name_3 = "모래바람의 약탈자";
                        user.monster_exp_3 = 127500;
                        savePlayer(user, sender);
                    }
                    break;
                
                case 6:
                    if(user.level > 200 && user.level <= 250){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 201 ~ 225] 해골 병사 (id 1)\nHP 13470 / ATK 178"
                            + "\n\n-> [Lv 226 ~ 250] 부패한 사막거미 (id 2)\nHP 15820 / ATK 189"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 모래 괴물 (id 3)\nHP 175,000 / ATK 216"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "해골 병사";
                        user.monster_exp_1 = 133625;
                        user.monster_name_2 = "부패한 사막거미";
                        user.monster_exp_2 = 185450;
                        user.monster_name_3 = "모래 괴물";
                        user.monster_exp_3 = 307500;
                        savePlayer(user, sender);
                    }
                    break;
                    case 7:
                    if(user.level > 250 && user.level <= 300){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 251 ~ 275] 얼음 고양이 (id 1)\nHP 17990 / ATK 197"
                            + "\n\n-> [Lv 276 ~ 300] 동결된 북극여우 (id 2)\nHP 20030 / ATK 205"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 눈보라 괴물 (id 3)\nHP 250,000 / ATK 232"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "얼음 고양이";
                        user.monster_exp_1 = 228840;
                        user.monster_name_2 = "동결된 북극여우";
                        user.monster_exp_2 = 284470;
                        user.monster_name_3 = "눈보라 괴물";
                        user.monster_exp_3 = 500000;
                        savePlayer(user, sender);
                    }
                    break;
                  
                case 8:
                    if(user.level > 300 && user.level <= 350){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 301 ~ 325] 설산 산토끼 (id 1)\nHP 22000 / ATK 211"
                            + "\n\n-> [Lv 326 ~ 350] 바위 거미 (id 2)\nHP 25000 / ATK 219"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 변종 눈보라 괴물 (id 3)\nHP 320,000 / ATK 248"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "설산 산토끼";
                        user.monster_exp_1 = 361920;
                        user.monster_name_2 = "바위 거미";
                        user.monster_exp_2 = 477990;
                        user.monster_name_3 = "변종 눈보라 괴물";
                        user.monster_exp_3 = 700000;
                        savePlayer(user, sender);
                    }
                    break;
                    
                case 9:
                    if(user.level > 350 && user.level <= 400){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 351 ~ 375] 선조의 방패유령 (id 1)\nHP 500 / ATK 225"
                            + "\n\n-> [Lv 376 ~ 400] 회백색 가디언 (id 2)\nHP 28000 / ATK 234"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 눈폭풍 마법사 (id 3)\nHP 400,000 / ATK 267"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "선조의 방패유령";
                        user.monster_exp_1 = 686590;
                        user.monster_name_2 = "회백색 가디언";
                        user.monster_exp_2 = 892700;
                        user.monster_name_3 = "변종 눈보라 괴물";
                        user.monster_exp_3 = 1300000;
                        savePlayer(user, sender);
                    }
                    break;
                
                case 10:
                    if(user.level > 400 && user.level <= 450){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 401 ~ 425] 눈사신 (id 1)\nHP 40000 / ATK 247"
                            + "\n\n-> [Lv 426 ~ 450] 서리빛 거인 (id 2)\nHP 46000 / ATK 261"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 만년설 얼음포자 (id 3)\nHP 500,000 / ATK 297"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "눈사신";
                        user.monster_exp_1 = 1326550;
                        user.monster_name_2 = "서리빛 거인";
                        user.monster_exp_2 = 1942700;
                        user.monster_name_3 = "만년설 얼음포자";
                        user.monster_exp_3 = 4000000;
                        savePlayer(user, sender);
                    }
                    break;
                    
                case 11:
                    if(user.level > 450 && user.level <= 500){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 451 ~ 475] 해저순찰자 (id 1)\nHP 250000 / ATK 270"
                            + "\n\n-> [Lv 476 ~ 500] 눈보라 해파리 (id 2)\nHP 300000 / ATK 280"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 해저서리 (id 3)\nHP 800,000 / ATK 297"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "해저순찰자";
                        user.monster_exp_1 = 2445880;
                        user.monster_name_2 = "눈보라 해파리";
                        user.monster_exp_2 = 3064600;
                        user.monster_name_3 = "해저서리";
                        user.monster_exp_3 = 8000000;
                        savePlayer(user, sender);
                    }
                    break;
                    
                case 12:
                    if(user.level > 500 && user.level <= 600){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 501 ~ 550] 독안개 거미 (id 1)\nHP 65000 / ATK 300"
                            + "\n\n-> [Lv 551 ~ 600] 맹독 해파리 (id 2)\nHP 80000 / ATK 330"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 독바다 해적선장 (id 3)\nHP 1,000,000 / ATK 357"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "독안개 거미";
                        user.monster_exp_1 = 3557700;
                        user.monster_name_2 = "맹독 해파리";
                        user.monster_exp_2 = 5000000;
                        user.monster_name_3 = "독바다 해적선장";
                        user.monster_exp_3 = 20000000;
                        savePlayer(user, sender);
                    }
                    
                case 13:
                    if(user.level > 600 && user.level <= 700){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 601 ~ 650] 독사냥꾼 (id 1)\nHP 80000 / ATK 350"
                            + "\n\n-> [Lv 651 ~ 700] 독이빨 박쥐 (id 2)\nHP 90000 / ATK 375"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 독구름 텐트라 (id 3)\nHP 1,250,000 / ATK 377"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "독사냥꾼";
                        user.monster_exp_1 = -10000000;
                        user.monster_name_2 = "독이빨 박쥐";
                        user.monster_exp_2 = 0;
                        user.monster_name_3 = "독구름 텐트라";
                        user.monster_exp_3 = 40000000;
                        savePlayer(user, sender);
                    }
                    break;
                    
                case 14:
                    if(user.level > 700 && user.level <= 800){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 701 ~ 750] 자수정 갑옷벌레 (id 1)\nHP 100000 / ATK 300 ~ 600"
                            + "\n\n-> [Lv 751 ~ 800] 사파이어 가시꾼 (id 2)\nHP 120000 / ATK 300 ~ 700"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 루비 티아고 (id 3)\nHP 1,250,000 / ATK 377"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "자수정 갑옷벌레";
                        user.monster_exp_1 = -80000000;
                        user.monster_name_2 = "사파이어 가시꾼";
                        user.monster_exp_2 = -10000000;
                        user.monster_name_3 = "루비 티아고";
                        user.monster_exp_3 = 300000000;
                        savePlayer(user, sender);
                    }
                    
                    case 15:
                    if(user.level > 800 && user.level <= 1000){
                        replier.reply(
                            "- 몬스터 목록 -"
                            + "\n\n-> [Lv 801 ~ 900] 흑마법사 수호병 (id 1)\nHP 350000 / ATK 500"
                            + "\n\n-> [Lv 901 ~ 1000] 환영 망령 (id 2)\nHP 500000 / ATK 500"
                            + "\n\n-> [준비중 / 사냥불가] [BOSS] 지하 골렘 (id 3)\nHP 2,200,000 / ATK 500"
                            + "\n\n*사냥 (id)로 사냥을 시작하세요!"
                        );
                        user.monster_name_1 = "흑마법사 수호병";
                        user.monster_exp_1 = 250000000;
                        user.monster_name_2 = "환영 망령";
                        user.monster_exp_2 = 600000000;
                        user.monster_name_3 = "지하 골렘";
                        user.monster_exp_3 = 3000000000;
                        savePlayer(user, sender);
                    }
                    break;
                    
                    case 16:
                    random = makeRnd(1, 3);
                    if(user.level >= 1000){
                      //if(random == 1)
                      replier.reply("이중갑옷 창술사 사냥을 시작합니다.\n\n*공격 으로 몬스터에게 피해를 입히거나, \n*이동 (필드번호) 으로 현재 위치를 옮길 수 있습니다.\n몬스터가 광폭화할경우 즉시 유저의 패배로 간주되고 사망합니다.\n\n[ ! ] 현재 테스트 중입니다.\n일부 기능이 제한되어 있는 상태입니다.\n스킬을 사용하실 수 없습니다.");
                      user.monster_name = "이중갑옷 창술사";
                      user.monster_exp = 0;
                      user.monster_hp = 5000000;
                      user.monster_hpmax = 5000000;
                      user.monster_atk = 603;
                      user.monster_def = 0;
                      user.monster_id = 1;
                      savePlayer(user, sender);
                    }
                }
        } else { // 사냥 대상을 입력했으면
            switch(cmd[1]){
                case "1":
                    if(user.monster_id == 0){
                    if(user.location == 1){
                        if(user.level <= 15){
                            user.monster_hp = 455;
                            user.monster_hpmax = 455;
                            user.monster_atk = 61;
                            user.monster_def = 0;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 2){
                        if(user.level <= 45){
                            user.monster_hp = 1575;
                            user.monster_hpmax = 1575;
                            user.monster_atk = 97;
                            user.monster_def = 0;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 3){
                        if(user.level <= 80){
                            user.monster_hp = 3820;
                            user.monster_hpmax = 3820;
                            user.monster_atk = 119;
                            user.monster_def = 0;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                        }
                    else if(user.location == 4){
                        if(user.level <= 125){
                            user.monster_hp = 6965;
                            user.monster_hpmax = 6965;
                            user.monster_atk = 139;
                            user.monster_def = 0;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 5){
                        if(user.level <= 175){
                            user.monster_hp = 10265;
                            user.monster_hpmax = 10265;
                            user.monster_atk = 155;
                            user.monster_def = 0;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 6){
                        if(user.level <= 225){
                            user.monster_hp = 13470;
                            user.monster_hpmax = 13470;
                            user.monster_atk = 178;
                            user.monster_def = 5;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 7){
                        if(user.level <= 275){
                            user.monster_hp = 17990;
                            user.monster_hpmax = 17990;
                            user.monster_atk = 197;
                            user.monster_def = 10;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                    else if(user.location == 8){
                        if(user.level <= 325){
                            user.monster_hp = 22000;
                            user.monster_hpmax = 22000;
                            user.monster_atk = 211;
                            user.monster_def = 20;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 9){
                        if(user.level <= 375){
                            user.monster_hp = 500;
                            user.monster_hpmax = 500;
                            user.monster_atk = 225;
                            user.monster_def = 99;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                else if(user.location == 10){
                        if(user.level <= 425){
                            user.monster_hp = 40000;
                            user.monster_hpmax = 40000;
                            user.monster_atk = 247;
                            user.monster_def = 10;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                else if(user.location == 11){
                        if(user.level <= 475){
                            user.monster_hp = 250000;
                            user.monster_hpmax = 250000;
                            user.monster_atk = 270;
                            user.monster_def = -900;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                    else if(user.location == 12){
                        if(user.level <= 550){
                            user.monster_hp = 70000;
                            user.monster_hpmax = 70000;
                            user.monster_atk = 300;
                            user.monster_def = 25;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                    else if(user.location == 13){
                        if(user.level <= 650){
                            user.monster_hp = 80000;
                            user.monster_hpmax = 80000;
                            user.monster_atk = 350;
                            user.monster_def = 30;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                    else if(user.location == 14){
                        if(user.level <= 750){
                            user.monster_hp = 100000;
                            user.monster_hpmax = 100000;
                            user.monster_atk = 300;
                            user.monster_def = -70;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 15){
                        if(user.level <= 900){
                            user.monster_hp = 350000;
                            user.monster_hpmax = 350000;
                            user.monster_atk = 500;
                            user.monster_def = 300;
                            user.monster_id = 1;
                            user.monster_name = user.monster_name_1;
                            user.monster_exp = user.monster_exp_1;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_1 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_1 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    }
                    break;
                
                case "2":
                    if(user.monster_id == 0) {
                    if(user.location == 1){
                        if(user.level <= 30){
                            user.monster_hp = 990;
                            user.monster_hpmax = 990;
                            user.monster_atk = 83;
                            user.monster_def = 0;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 2){
                        if(user.level <= 60){
                            user.monster_hp = 2990;
                            user.monster_hpmax = 2990;
                            user.monster_atk = 113;
                            user.monster_def = 0;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 3){
                        if(user.level <= 100){
                            user.monster_hp = 5495;
                            user.monster_hpmax = 5495;
                            user.monster_atk = 133;
                            user.monster_def = 0;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 4){
                        if(user.level <= 150){
                            user.monster_hp = 8755;
                            user.monster_hpmax = 8755;
                            user.monster_atk = 145;
                            user.monster_def = 0;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 5){
                        if(user.level <= 200){
                            user.monster_hp = 11855;
                            user.monster_hpmax = 11855;
                            user.monster_atk = 162;
                            user.monster_def = 0;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 6){
                        if(user.level <= 250){
                            user.monster_hp = 15820;
                            user.monster_hpmax = 15820;
                            user.monster_atk = 189;
                            user.monster_def = 5;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 7){
                        if(user.level <= 300){
                            user.monster_hp = 20030;
                            user.monster_hpmax = 20030;
                            user.monster_atk = 205;
                            user.monster_def = 10;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                    else if(user.location == 8){
                        if(user.level <= 350){
                            user.monster_hp = 25000;
                            user.monster_hpmax = 25000;
                            user.monster_atk = 219;
                            user.monster_def = 30;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 9){
                        if(user.level <= 400){
                            user.monster_hp = 27000;
                            user.monster_hpmax = 27000;
                            user.monster_atk = 234;
                            user.monster_def = 40;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                else if(user.location == 10){
                        if(user.level <= 450){
                            user.monster_hp = 46000;
                            user.monster_hpmax = 46000;
                            user.monster_atk = 261;
                            user.monster_def = 10;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                else if(user.location == 11){
                        if(user.level <= 500){
                            user.monster_hp = 300000;
                            user.monster_hpmax = 300000;
                            user.monster_atk = 280;
                            user.monster_def = -900;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                else if(user.location == 12){
                        if(user.level <= 600){
                            user.monster_hp = 80000;
                            user.monster_hpmax = 80000;
                            user.monster_atk = 330;
                            user.monster_def = 25;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    
                else if(user.location == 13){
                        if(user.level <= 700){
                            user.monster_hp = 90000;
                            user.monster_hpmax = 90000;
                            user.monster_atk = 375;
                            user.monster_def = 30;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                   
                 else if(user.location == 14){
                        if(user.level <= 800){
                            user.monster_hp = 120000;
                            user.monster_hpmax = 120000;
                            user.monster_atk = 350;
                            user.monster_def = -60;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    else if(user.location == 15){
                        if(user.level <= 1000){
                            user.monster_hp = 500000;
                            user.monster_hpmax = 500000;
                            user.monster_atk = 500;
                            user.monster_def = 400;
                            user.monster_id = 2;
                            user.monster_name = user.monster_name_2;
                            user.monster_exp = user.monster_exp_2;
                            savePlayer(user, sender);
                            replier.reply(user.monster_name_2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_2 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + user.monster_def + "% }");
                        }
                        else {
                            replier.reply("몬스터 레벨을 확인해주세요.\n\n유저 레벨보다 높거나 낮은 몬스터는 사냥할 수 없습니다.");
                        }
                    }
                    }
             break;
             
            /*case "3":
                    if(user.monster_id == 0) {
                    if(user.location == 1){
                        user.monster_hp = 15000;
                        user.monster_hpmax = 15000;
                        user.monster_atk = 149;
                        user.monster_def = 1;
                        user.monster_id = 3;
                        user.monster_name = user.monster_name_3;
                        user.monster_exp = user.monster_exp_3;
                        savePlayer(user, sender);
                        replier.reply(user.monster_name_3 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name_3 + ">\n\nHP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nATK { " + user.monster_atk + " }\nDEF { " + (-(user.monster_def - 1)) + "% }");
                    }
                    /*else if(user.location == 2 && user.level > 30){
                        user.monster_hp = 235;
                        user.monster_hpmax = 235;
                        user.monster_atk = 24;
                        user.monster_def = 1;
                        user.attack_monster = 2;
                        user.drop_Exp = 3200;
                        savePlayer(user, sender);
                        replier.reply(user.monster_name2 + " 사냥을 시작합니다.\n*공격 으로 몬스터에게 피해를 입히세요!\n\n\n<" + user.monster_name2 + ">\n\nM.HP { " + user.monster_hp + " / " + user.monster_hpmax + " }\nM.ATK { " + user.monster_atk + " }\nM.DEF { " + (-(user.monster_def - 1)) + "% }");
                    }
                    }
             break;*/
            
                default:
                    replier.reply("존재하지 않는 대상입니다.");
                }
            }

            savePlayer(user, sender);

        return;
    
    }
    
    
    if(cmd[0] === "사용" && user.heal == false) {
        switch(cmd[1]){
            case "0":
                if(user.box_event > 0){
                    a = makeRnd(1, 1000);
                    if(a < 500){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 5 STAR");
                        user.box_event -= 1;
                        user.STAR += 5;
                        savePlayer(user, sender);
                    }
                    else if(a < 750){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 1 출석코인");
                        user.box_event -= 1;
                        user.event4 += 1;
                        savePlayer(user, sender);
                    }
                    else if(a < 800){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 5 하급 강화석");
                        user.box_event -= 1;
                        user.stone_s += 5;
                        savePlayer(user, sender);
                    }
                    else if(a < 850){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 1,000 G");
                        user.box_event -= 1;
                        user.gold += 1000;
                        savePlayer(user, sender);
                    }
                    else if(a < 900){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 2 고급 HP 물약");
                        user.box_event -= 1;
                        user.hp_potion_l += 2;
                        savePlayer(user, sender);
                    }
                    else if(a < 950){
                        replier.reply("출석 랜덤박스 오픈결과\n\n-> 2 고급 스타박스 설계도");
                        user.box_event -= 1;
                        user.star_print_m += 2;
                        savePlayer(user, sender);
                    }
                    else if(a < 980){
                        replier.reply("[LUCKY+] 출석 랜덤박스 오픈결과\n\n-> 3 출석 랜덤박스");
                        user.box_event += 2;
                        savePlayer(user, sender);
                    }
                    else if(a < 995){
                        replier.reply("[LUCKY] 출석 랜덤박스 오픈결과\n\n-> 1 스타 박스 S");
                        user.box_event -= 1;
                        user.box_star_s += 1;
                        savePlayer(user, sender);
                    }
                    else if(a < 998){
                        replier.reply("[LUCKY+] 출석 랜덤박스 오픈결과\n\n-> 1 스타 박스 M");
                        user.box_event -= 1;
                        user.box_star_m += 1;
                        savePlayer(user, sender);
                    }
                    else{
                        replier.reply("[LUCKY+] 출석 랜덤박스 오픈결과\n\n-> 5,000 STAR");
                        user.box_event -= 1;
                        user.STAR += 5000;
                        savePlayer(user, sender);
                    }
                }
                break;
                
            case "1":
                if(user.hp_potion_s > 0){
                    if(user.hp_total < user.hpmax_total){
                    replier.reply("하급 HP물약을 사용했습니다.\n\n회복된 체력 : " + Math.round(user.hpmax_total / 5));
                    user.hp += Math.round(user.hpmax_total / 5);
                    user.hp_potion_s -= 1;
                    savePlayer(user, sender);
                    }
                }
                else {
                    replier.reply("아이템을 사용할 수 없습니다.");
                }
                break;
            
            case "2":
                if(user.hp_potion_m > 0){
                    if(user.hp_total < user.hpmax_total){
                    replier.reply("중급 HP물약을 사용했습니다.\n\n회복된 체력 : " + Math.round(user.hpmax_total / 2));
                    user.hp += Math.round(user.hpmax_total / 2);
                    user.hp_potion_m -= 1;
                    savePlayer(user, sender);
                    }
                }
                else {
                    replier.reply("아이템을 사용할 수 없습니다.");
                }
                break;
            
            case "3":
                if(user.hp_potion_l > 0){
                    if(user.hp_total < user.hpmax_total){
                    replier.reply("상급 HP물약을 사용했습니다.\n\n회복된 체력 : " + Math.round(user.hpmax_total / 1));
                    user.hp = user.hpmax;
                    user.hp_potion_l -= 1;
                    savePlayer(user, sender);
                    }
                }
                else {
                    replier.reply("아이템을 사용할 수 없습니다.");
                }
            break;
            
            case "41":
                if(user.box_star_s !== 0){
                value = makeRnd(1, 1000);
                if(value <= 650){
                    star = makeRnd(50, 300);
                    replier.reply("스타박스 S 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_s -= 1;
                    savePlayer(user, sender);
                }
                else if(value <= 985){
                    star = makeRnd(301, 1000);
                    replier.reply("[LUCKY]\n스타박스 S 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_s -= 1;
                    savePlayer(user, sender);
                }
                else{
                    star = makeRnd(1001, 2500);
                    replier.reply("[LUCKY+]\n스타박스 S 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_s -= 1;
                    savePlayer(user, sender);
                }
                }
            break;
            
            case "42":
                if(user.box_star_m !== 0){
                value = makeRnd(1, 1000);
                if(value <= 650){
                    star = makeRnd(500, 1500);
                    replier.reply("스타박스 M 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_m -= 1;
                    savePlayer(user, sender);
                }
                else if(value <= 985){
                    star = makeRnd(1501, 5000);
                    replier.reply("[LUCKY]\n스타박스 M 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_m -= 1;
                    savePlayer(user, sender);
                }
                else{
                    star = makeRnd(5001, 20000);
                    replier.reply("[LUCKY+]\n스타박스 M 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_m -= 1;
                    savePlayer(user, sender);
                }
                }
            break;
            
            case "43":
                if(user.box_star_l !== 0){
                value = makeRnd(1, 1000);
                if(value <= 750){
                    star = makeRnd(2000, 5000);
                    replier.reply("스타박스 L 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_l -= 1;
                    savePlayer(user, sender);
                }
                else if(value <= 985){
                    star = makeRnd(5001, 20000);
                    replier.reply("[LUCKY]\n스타박스 L 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_l -= 1;
                    savePlayer(user, sender);
                }
                else{
                    star = makeRnd(20001, 100000);
                    replier.reply("[LUCKY+]\n스타박스 L 오픈 결과\n\n-> " + star + " STAR");
                    user.STAR += star;
                    user.box_star_l -= 1;
                    savePlayer(user, sender);
                }
                }
            break;
        }
    }
    
    if(msg == "*랭킹"){
  replier.reply("*랭킹 레벨 / 레벨 랭킹을 확인합니다.\n\n*랭킹 등급 / LP 랭킹을 확인합니다.\n\n*랭킹 스타 / 스타 보유량 랭킹을 확인합니다.");
}
    
    if(msg == "*랭킹 레벨"){
      let rank = playerlist() 
      rank.sort(function(a, b) { 
        return updatePlayer(b).level - updatePlayer(a).level; 
      }); 
      replier.reply("text RPG Season 5 전체 랭킹 (레벨)\n" + "\u200b".repeat(500) + "\n\n" + ''.repeat(500) + rank.map(function(e, v) { 
        return (v + 1) + "위 " + e + "  (Lv." + updatePlayer(e).level + ")"; 
      }).join("\n\n")); 
    }
   
   if(msg == "*랭킹 등급"){
     let rank = playerlist()
     rank.sort(function(a, b) { 
       return updatePlayer(b).rankscore - updatePlayer(a).rankscore; 
     }); 
     replier.reply("text RPG Season 5 전체 랭킹 (등급)\n[정규 시즌 : 1ST SEASON]\n" + "\u200b".repeat(500) + "\n\n" + ''.repeat(500) + rank.map(function(e, v) { 
       return (v + 1) + "위 " + e + "  (" + updatePlayer(e).rankscore + " LP)"; 
     }).join("\n\n")); 
   }
   
   if(msg == "*랭킹 스타"){
     let rank = playerlist()
     rank.sort(function(a, b) { 
        return updatePlayer(b).STAR - updatePlayer(a).STAR; 
     }); 
     replier.reply("text RPG Season 5 전체 랭킹 (스타 보유량)\n" + "\u200b".repeat(500) + "\n\n" + ''.repeat(500) + rank.map(function(e, v) { 
        return (v + 1) + "위 " + e + "  (" + updatePlayer(e).STAR + " STAR)"; 
     }).join("\n\n")); 
    }
    
    if(cmd[0] === "장비") {
        replier.reply(sender + "님의 장비 목록"
        + "\n\n\n갑옷 : Armor Lv. " + user.armor_level + "\n" + user.armor_name + "(id " + user.armor_id + ")"
        + "\n\n무기 : Weapon Lv. " + user.weapon_level + "\n" + user.weapon_name + "(id " + user.weapon_id + ")"
        + "\n\n*갑옷 으로 갑옷 관련 명령어를, *무기 로 무기 관련 명령어를 확인하실 수 있습니다.");
    }
    
    if(msg == "*갑옷"){
        replier.reply("갑옷 명령어 목록\n\n*갑옷 정보 / 갑옷의 상세 정보와 강화 비용 확인이 가능합니다.\n\n*갑옷 제련 / 재료를 소모하여 갑옷을 강화시킵니다.\n\n*갑옷 진화 / 최대 강화값에 도달한 갑옷을 진화시킵니다.");
    }
    
    if(cmd[0] === "갑옷") {
        switch(cmd[1]) {
            case "정보":
                G = Math.round((user.armor_level * 1.45) + 150);
                if(user.armor_up !== 25 && user.armor_id < 8){
                replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                + "\n\n<갑옷 능력치>"
                + "\nHP + " + user.armor_hp
                + "\n\n<" + (user.armor_up + 1) + "강 제련 재료>"
                + "\n- 하급 강화석 × " + Math.round(G / 100)
                + "\n- " + Math.round(G * gdc) + " G"
                + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                + "\n강화 성공 확률 [ " + (user.armor_up_per / 100) + "% ]"
                + "\n확정 강화 성공까지 강화시도 " + user.armor_up_num + "회 남음");
                }
                else if(user.armor_up !== 30 && user.armor_id >= 8){
                replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                + "\n\n<갑옷 능력치>"
                + "\nHP + " + user.armor_hp
                + "\n\n<" + (user.armor_up + 1) + "강 제련 재료>"
                + "\n- 중급 강화석 × " + Math.round(G / 100)
                + "\n- " + Math.round(G * gdc) + " G"
                + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                + "\n강화 성공 확률 [ " + (user.armor_up_per / 100) + "% ]"
                + "\n확정 강화 성공까지 강화시도 " + user.armor_up_num + "회 남음");
                }
                else{
                    if(user.armor_up == 25 && user.armor_id < 6){
                    replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                    + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                    + "\n\n<갑옷 능력치>"
                    + "\nHP + " + user.armor_hp
                    + "\n\n<진화 재료>"
                    + "\n- 하급 강화석 × " + ((user.armor_id * 30) + 20)
                    + "\n- " + (G * 70) + " G"
                    + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*갑옷 진화 로 진화가 가능합니다.");
                    }
                    else if(user.armor_up == 25 && user.armor_id == 6){
                    replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                    + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                    + "\n\n<갑옷 능력치>"
                    + "\nHP + " + user.armor_hp
                    + "\n\n<진화 재료>"
                    + "\n- 하급 강화석 × " + ((user.armor_id * 30) + 20)
                    + "\n- " + (G * 80) + " G"
                    + "\n- " + (G * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*갑옷 진화 로 진화가 가능합니다.");
                    }
                    else if(user.armor_up == 25 && user.armor_id == 7){
                    replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                    + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                    + "\n\n<갑옷 능력치>"
                    + "\nHP + " + user.armor_hp
                    + "\n\n<진화 재료>"
                    + "\n- 중급 강화석 × " + ((user.armor_id * 10) + 10)
                    + "\n- " + (G * 80) + " G"
                    + "\n- " + (G * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*갑옷 진화 로 진화가 가능합니다.");
                    }
                    else if(user.armor_up == 30 && user.armor_id > 7){
                    replier.reply(sender + "님의 갑옷 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 갑옷 : " + user.armor_name + "(+" + user.armor_up + ")"
                    + "\n(갑옷 Lv. " + user.armor_level + " / ID " + user.armor_id + ")"
                    + "\n\n<갑옷 능력치>"
                    + "\nHP + " + user.armor_hp
                    + "\n\n<진화 재료>"
                    + "\n- 중급 강화석 × " + ((user.armor_id * 10) + 10)
                    + "\n- " + (G * 80) + " G"
                    + "\n- " + (G * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.armor_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*갑옷 진화 로 진화가 가능합니다.");
   
                    }
                }
                break;
                
            case "제련":
                G = Math.round((user.armor_level * 1.45) + 150);
                if(user.armor_id < 8){
                if(user.gold >= Math.round(G * gdc) && user.stone_s >= Math.round(G / 100) && user.level >= user.armor_level && user.armor_up !== 25){ 
                    per = makeRnd(1, 10000); 
                    if(per <= user.armor_up_per || user.armor_up_num == 0){ 
                        replier.reply("■ " + (user.armor_up + 1) + "강 제련에 성공했습니다! ■\n\n+" + user.armor_up + " >>> +" + (user.armor_up + 1) 
                        + "\n\n<ARMOR STAT UPDATE>\nHP   | " + (user.armor_hp + (user.armor_id * 20) + 10) + " (+" + ((user.armor_id * 20) + 10)); 
                        user.gold -= Math.round(G * gdc); 
                        user.stone_s -= Math.round(G / 100); 
                        user.armor_hp += 10 + (user.armor_id * 20); 
                        user.armor_up += 1;
                        user.armor_level += 4; 
                        savePlayer(user, sender); 
                        if(user.armor_up < 5){ 
                            user.armor_up_per = 10000;
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 10){ 
                            user.armor_up_per = 5000; 
                            user.armor_up_num = 3;
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 15){ 
                            user.armor_up_per = 3500; 
                            user.armor_up_num = 5; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 20){ 
                            user.armor_up_per = 1000; 
                            user.armor_up_num = 8; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 25){ 
                            user.armor_up_per = 350;
                            user.armor_up_num = 15; 
                            savePlayer(user, sender); 
                        }
                    } 
                        else{ 
                            replier.reply("□ " + (user.armor_up + 1) + "강 제련에 실패했습니다. □\n\n제련 확정성공까지 " + (user.armor_up_num - 1) + "회 남음"); 
                            user.gold -= Math.round(G * gdc); 
                            user.stone_s -= Math.round(G / 100); 
                            user.armor_up_num -= 1; 
                            savePlayer(user, sender); 
                        if(user.armor_up_num == 1){ 
                            replier.reply("제련 시도횟수가 확정성공횟수에 도달하여 다음 제련확률이 100%가 되었습니다!"); 
                            user.armor_up_per = 10000; 
                            savePlayer(user, sender); 
                        } 
                    } 
                } 
                    else{ 
                        replier.reply("제련재료가 부족합니다."); 
                    } 
                    }
                    
                    else if(user.armor_id >= 8) {
                      if(user.gold >= Math.round(G * gdc) && user.stone_m >= Math.round(G / 100) && user.level >= user.armor_level && user.armor_up !== 25){ 
                    per = makeRnd(1, 10000); 
                    if(per <= user.armor_up_per || user.armor_up_num == 0){ 
                        replier.reply("■ " + (user.armor_up + 1) + "강 제련에 성공했습니다! ■\n\n+" + user.armor_up + " >>> +" + (user.armor_up + 1) 
                        + "\n\n<ARMOR STAT UPDATE>\nHP   | " + (user.armor_hp + (user.armor_id * 20) + 10) + " (+" + ((user.armor_id * 20) + 10)); 
                        user.gold -= Math.round(G * gdc); 
                        user.stone_m -= Math.round(G / 100); 
                        user.armor_hp += 10 + (user.armor_id * 20); 
                        user.armor_up += 1;
                        user.armor_level += 5; 
                        savePlayer(user, sender); 
                        if(user.armor_up < 5){ 
                            user.armor_up_per = 10000;
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 10){ 
                            user.armor_up_per = 5000; 
                            user.armor_up_num = 3;
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 15){ 
                            user.armor_up_per = 3500; 
                            user.armor_up_num = 5; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 20){ 
                            user.armor_up_per = 1000; 
                            user.armor_up_num = 8; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.armor_up < 25){ 
                            user.armor_up_per = 350;
                            user.armor_up_num = 15; 
                            savePlayer(user, sender); 
                        }
                        else if(user.armor_up < 30){ 
                            user.armor_up_per = 100;
                            user.armor_up_num = 25; 
                            savePlayer(user, sender); 
                        }
                    } 
                        else{ 
                            replier.reply("□ " + (user.armor_up + 1) + "강 제련에 실패했습니다. □\n\n제련 확정성공까지 " + (user.armor_up_num - 1) + "회 남음"); 
                            user.gold -= Math.round(G * gdc); 
                            user.stone_m -= Math.round(G / 100); 
                            user.armor_up_num -= 1; 
                            savePlayer(user, sender); 
                        if(user.armor_up_num == 1){ 
                            replier.reply("제련 시도횟수가 확정성공횟수에 도달하여 다음 제련확률이 100%가 되었습니다!"); 
                            user.armor_up_per = 10000; 
                            savePlayer(user, sender); 
                        } 
                    } 
                } 
                    else{ 
                        replier.reply("제련재료가 부족합니다."); 
                    } 
                    }
           break;
           
           case "진화":
               if(user.armor_up == 25){
                   G = Math.round((user.armor_level * 1.45) + 150);
                   if(user.gold >= (G * 70) && user.level >= user.armor_level && user.stone_s >= (20 + (user.armor_id * 30))){
                       if(user.armor_id == 1){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 70);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "온전한 사슬 갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 2){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 70);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "견고한 철갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 3){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 70);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "용맹한 화염의 갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 4){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 70);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "언옵타늄 이중갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 5){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 70);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "광명의 갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 6 && user.gold >= (G * 80) && user.STAR >= G){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 80);
                           user.STAR -= (G * 2);
                           user.stone_s -= ((user.armor_id * 30) + 20);
                           user.armor_up = 0;
                           user.armor_name = "새벽 갑주";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 7 && user.gold >= (G * 80) && user.STAR >= G && user.stone_m >= ((user.armor_id * 10) + 10)){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 80);
                           user.STAR -= (G * 2);
                           user.stone_m -= ((user.armor_id * 10) + 10);
                           user.armor_up = 0;
                           user.armor_name = "구원의 갑주";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.armor_id == 8 && user.gold >= (G * 80) && user.STAR >= G && user.stone_m >= ((user.armor_id * 10) + 10)){
                           replier.reply("재료를 소모하여 갑옷을 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.");
                           user.gold -= (G * 80);
                           user.STAR -= (G * 2);
                           user.stone_m -= ((user.armor_id * 10) + 10);
                           user.armor_up = 0;
                           user.armor_name = "고대의 갑옷";
                           user.armor_id += 1;
                           user.armor_up_per = 10000;
                           user.armor_up_num = 3;
                           savePlayer(user, sender);
                       }
                   }
                   else {
                     replier.reply("갑옷 진화에 필요한 재료가 부족합니다.");
                   }
               }
               else {
                 replier.reply("25강(ID 8+의 경우 30강)에 도달하여 갑옷을 진화시켜보세요!\n\n현재 25강에 도달하지 않았습니다.");
               }
            break;
        }
    }
    
    if(msg == "*무기"){
        replier.reply("무기 명령어 목록\n\n*무기 정보 / 무기의 상세 정보와 강화 비용 확인이 가능합니다.\n\n*무기 제련 / 재료를 소모하여 무기를 강화시킵니다.\n\n*무기 진화 / 최대 강화값에 도달한 무기를 진화시킵니다.");
    }
    
    if(cmd[0] === "무기") {
        switch(cmd[1]) {
            case "정보":
                GG = Math.round((user.weapon_level * 1.65) + 150);
                if(user.weapon_up !== 25 && user.weapon_id < 8){
                replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                + "\n\n<무기 능력치>"
                + "\nATK + " + user.weapon_atk
                + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                + "\n\n<" + (user.weapon_up + 1) + "강 제련 재료>"
                + "\n- 하급 강화석 × " + Math.round(GG / 100)
                + "\n- " + Math.round(GG * gdc) + " G"
                + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                + "\n강화 성공 확률 [ " + (user.weapon_up_per / 100) + "% ]"
                + "\n확정 강화 성공까지 강화시도 " + user.weapon_up_num + "회 남음");
                }
                if(user.weapon_up !== 30 && user.weapon_id >= 8){
                replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                + "\n\n<무기 능력치>"
                + "\nATK + " + user.weapon_atk
                + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                + "\n\n<" + (user.weapon_up + 1) + "강 제련 재료>"
                + "\n- 중급 강화석 × " + Math.round(GG / 250)
                + "\n- " + Math.round(GG * gdc) + " G"
                + "\n- " + Math.round(GG / 400) + " STAR"
                + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                + "\n강화 성공 확률 [ " + (user.weapon_up_per / 100) + "% ]"
                + "\n확정 강화 성공까지 강화시도 " + user.weapon_up_num + "회 남음");
                }
                
                else{
                    if(user.weapon_up == 25 && user.weapon_id < 6){
                    replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                    + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                    + "\n\n<무기 능력치>"
                    + "\nATK + " + user.weapon_atk
                    + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                    + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                    + "\n\n<진화 재료>"
                    + "\n- 하급 강화석 × " + ((user.weapon_id * 30) + 30)
                    + "\n- " + (GG * 70) + " G"
                    + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*무기 진화 로 진화가 가능합니다.");
                    }
                    else if(user.weapon_up == 25 && user.weapon_id == 6){
                    replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                    + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                    + "\n\n<무기 능력치>"
                    + "\nATK + " + user.weapon_atk
                    + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                    + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                    + "\n\n<진화 재료>"
                    + "\n- 하급 강화석 × " + ((user.weapon_id * 30) + 30)
                    + "\n- " + (GG * 80) + " G"
                    + "\n- " + (GG * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*무기 진화 로 진화가 가능합니다.");
                    }
                    else if(user.weapon_up == 25 && user.weapon_id == 7) {
                    replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                    + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                    + "\n\n<무기 능력치>"
                    + "\nATK + " + user.weapon_atk
                    + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                    + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                    + "\n\n<진화 재료>"
                    + "\n- 중급 강화석 × " + ((user.weapon_id * 10) + 20)
                    + "\n- " + (GG * 80) + " G"
                    + "\n- " + (GG * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*무기 진화 로 진화가 가능합니다.");
                    }
                    else if(user.weapon_up == 30 && user.weapon_id > 7) {
                    replier.reply(sender + "님의 무기 정보\n" + "\u200b".repeat(500)
                    + "\n\n\n착용중인 무기 : " + user.weapon_name + "(+" + user.weapon_up + ")"
                    + "\n(무기 Lv. " + user.weapon_level + " / ID " + user.weapon_id + ")"
                    + "\n\n<무기 능력치>"
                    + "\nATK + " + user.weapon_atk
                    + "\nCRT.% + " + (user.weapon_crt_per / 10000) + "%p"
                    + "\nCRT.D + " + (user.weapon_crt_dam / 10) + "%p"
                    + "\n\n<진화 재료>"
                    + "\n- 중급 강화석 × " + ((user.weapon_id * 10) + 20)
                    + "\n- " + (GG * 80) + " G"
                    + "\n- " + (GG * 2) + " STAR"
                    + "\n- 조건 : 유저 LEVEL " + user.weapon_level + "+"
                    + "\n\n진화 재료를 다 모으셨다면\n*무기 진화 로 진화가 가능합니다.");
                    }
                }
                break;
                
            case "제련":
                GG = Math.round((user.weapon_level * 1.65) + 150);
                if(user.weapon_id < 8){
                if(user.gold >= Math.round(GG * gdc) && user.stone_s >= Math.round(GG / 100) && user.level >= user.weapon_level && user.weapon_up !== 25){ 
                    per = makeRnd(1, 10000); 
                    if(per <= user.weapon_up_per || user.weapon_up_num == 0){ 
                        replier.reply("■ " + (user.weapon_up + 1) + "강 제련에 성공했습니다! ■\n\n+" + user.weapon_up + " >>> +" + (user.weapon_up + 1) 
                        + "\n\n<WEAPON STAT UPDATE>\nATK | " + (user.weapon_atk + user.weapon_id * 6) + " (+" + (user.weapon_id * 6)); 
                        user.gold -= Math.round(GG * gdc); 
                        user.stone_s -= Math.round(GG / 100); 
                        user.weapon_atk += (user.weapon_id * 6); 
                        user.weapon_up += 1;
                        user.weapon_level += 4; 
                        savePlayer(user, sender); 
                        if(user.weapon_up < 5){ 
                            user.weapon_up_per = 10000;
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 10){ 
                            user.weapon_up_per = 5000; 
                            user.weapon_up_num = 3;
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 15){ 
                            user.weapon_up_per = 3500; 
                            user.weapon_up_num = 5; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 20){ 
                            user.weapon_up_per = 1000; 
                            user.weapon_up_num = 8; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 25){ 
                            user.weapon_up_per = 350;
                            user.weapon_up_num = 15; 
                            savePlayer(user, sender); 
                        }
                    } 
                        else{ 
                            replier.reply("□ " + (user.weapon_up + 1) + "강 제련에 실패했습니다. □\n\n제련 확정성공까지 " + (user.weapon_up_num - 1) + "회 남음"); 
                            user.gold -= Math.round(GG * gdc); 
                            user.stone_s -= Math.round(GG / 100); 
                            user.weapon_up_num -= 1; 
                            savePlayer(user, sender); 
                        if(user.weapon_up_num == 1){ 
                            replier.reply("제련 시도횟수가 확정성공횟수에 도달하여 다음 제련확률이 100%가 되었습니다!"); 
                            user.weapon_up_per = 10000; 
                            savePlayer(user, sender); 
                        } 
                    } 
                } 
                    else{ 
                        replier.reply("제련재료가 부족합니다."); 
                    }
                    }
           else if(user.weapon_id >= 8){
                if(user.gold >= Math.round(GG * gdc) && user.stone_m >= Math.round(GG / 250) && user.level >= user.weapon_level && user.weapon_up !== 30 && user.STAR >= Math.round(GG / 400)){ 
                    per = makeRnd(1, 10000); 
                    if(per <= user.weapon_up_per || user.weapon_up_num == 0){ 
                        replier.reply("■ " + (user.weapon_up + 1) + "강 제련에 성공했습니다! ■\n\n+" + user.weapon_up + " >>> +" + (user.weapon_up + 1) 
                        + "\n\n<WEAPON STAT UPDATE>\nATK | " + (user.weapon_atk + user.weapon_id * 8) + " (+" + (user.weapon_id * 8)); 
                        user.gold -= Math.round(GG * gdc);
                        user.STAR -= Math.round(GG / 400);
                        user.stone_m -= Math.round(GG / 250); 
                        user.weapon_atk += (user.weapon_id * 6); 
                        user.weapon_up += 1;
                        user.weapon_level += 5; 
                        savePlayer(user, sender); 
                        if(user.weapon_up < 5){ 
                            user.weapon_up_per = 10000;
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 10){ 
                            user.weapon_up_per = 5000; 
                            user.weapon_up_num = 3;
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 15){ 
                            user.weapon_up_per = 3500; 
                            user.weapon_up_num = 5; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 20){ 
                            user.weapon_up_per = 1000; 
                            user.weapon_up_num = 8; 
                            savePlayer(user, sender); 
                        } 
                        else if(user.weapon_up < 25){ 
                            user.weapon_up_per = 350;
                            user.weapon_up_num = 15; 
                            savePlayer(user, sender); 
                        }
                        else if(user.weapon_up < 30){ 
                            user.weapon_up_per = 100;
                            user.weapon_up_num = 25; 
                            savePlayer(user, sender); 
                        }
                    } 
                        else{ 
                            replier.reply("□ " + (user.weapon_up + 1) + "강 제련에 실패했습니다. □\n\n제련 확정성공까지 " + (user.weapon_up_num - 1) + "회 남음"); 
                            user.gold -= Math.round(GG * gdc); 
                            user.stone_m -= Math.round(GG / 250); 
                            user.weapon_up_num -= 1; 
                            user.STAR -= Math.round(GG / 400);
                            savePlayer(user, sender); 
                        if(user.weapon_up_num == 1){ 
                            replier.reply("제련 시도횟수가 확정성공횟수에 도달하여 다음 제련확률이 100%가 되었습니다!"); 
                            user.weapon_up_per = 10000; 
                            savePlayer(user, sender); 
                        } 
                    } 
                } 
                    else{ 
                        replier.reply("제련재료가 부족합니다."); 
                    }
                    }
           break;
           
           case "진화":
               if(user.weapon_up == 25 || user.weapon_up == 30){
                 if(user.weapon_id < 9){
                 
                   GG = Math.round((user.weapon_level * 1.65) + 150);
                   if(user.weapon_id < 7 && user.gold >= (GG * 70) && user.level >= user.weapon_level && user.stone_s >= (30 + (user.weapon_id * 30))){
                       if(user.weapon_id == 1){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0500%P\nCRT.D + 10.0%P");
                           user.gold -= (GG * 70);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "가벼운 목검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 500;
                           user.weapon_crt_dam += 100;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.weapon_id == 2){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0500%P\nCRT.D + 10.0%P");
                           user.gold -= (GG * 70);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "견고한 철검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 500;
                           user.weapon_crt_dam += 100;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.weapon_id == 3){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0800%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 70);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "용맹한 불꽃의 검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 800;
                           user.weapon_crt_dam += 150;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.weapon_id == 4){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0800%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 70);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "언옵타늄 더블소드";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 800;
                           user.weapon_crt_dam += 150;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.weapon_id == 5){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0800%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 70);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "광명의 검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 800;
                           user.weapon_crt_dam += 150;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else if(user.weapon_id == 6 && user.gold >= (GG * 80) && user.STAR >= (GG * 2)){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.0800%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 80);
                           user.STAR -= (GG * 2);
                           user.stone_s -= ((user.weapon_id * 30) + 30);
                           user.weapon_up = 0;
                           user.weapon_name = "새벽의 검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 800;
                           user.weapon_crt_dam += 150;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       }
                       else if(user.weapon_id >= 7){
                         if(user.weapon_id == 7){
                       if(user.weapon_up == 25 && user.gold >= (GG * 80) && user.STAR >= (GG * 2) && user.level >= user.weapon_level && user.stone_m >= (20 + (user.weapon_id * 10))){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nCRT.% + 0.1000%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 80);
                           user.STAR -= (GG * 2);
                           user.stone_m -= ((user.weapon_id * 10) + 20);
                           user.weapon_up = 0;
                           user.weapon_name = "구원의 낫";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 1000;
                           user.weapon_crt_dam += 150;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else {
                         replier.reply("재료가 부족합니다.");
                       }
                   }
                   else if(user.weapon_id == 8){
                     if(user.weapon_up == 30 && user.gold >= (GG * 80) && user.STAR >= (GG * 2) && user.level >= user.weapon_level && user.stone_m >= (20 + (user.weapon_id * 10))){
                           replier.reply("재료를 소모하여 무기를 진화시켰습니다!\n\n강화값이 0강으로 초기화되었습니다.\n\n<추가 능력치 증가>\nATK + 300\nCRT.% + 0.1000%P\nCRT.D + 15.0%P");
                           user.gold -= (GG * 80);
                           user.STAR -= (GG * 2);
                           user.stone_m -= ((user.weapon_id * 10) + 20);
                           user.weapon_up = 0;
                           user.weapon_name = "고대의 검";
                           user.weapon_id += 1;
                           user.weapon_crt_per += 1000;
                           user.weapon_crt_dam += 150;
                           user.weapon_atk += 300;
                           user.weapon_up_per = 10000;
                           user.weapon_up_num = 3;
                           savePlayer(user, sender);
                       }
                       else {
                         replier.reply("재료가 부족합니다.");
                       }
                   }
                   }
                   else {
                     replier.reply("무기 진화에 필요한 재료가 부족합니다.");
                   }
                   }
               }
               else {
                 replier.reply("25강(ID 8+일 경우 30강)에 도달하여 무기를 진화시켜보세요!\n\n현재 25강에 도달하지 않았습니다.");
               }
            break;
        }
    }
    
    if(msg == "*스킬"){
        replier.reply("스킬 명령어 목록\n\n*스킬 정보 (id) / 본인이 소유한 스킬의 상세정보를 확인합니다.\n\n*스킬 강화 (id) / 해당 스킬을 강화합니다.\n\n*스킬 진화 (id) / 최대 강화값에 도달한 스킬을 진화시킵니다. (준비중)\n\n*스킬 사용 (id) / 해당 스킬을 사용합니다.");
    }
    
    if(cmd[0] === "스킬"){
       if(user.skill_mp_2 !== 65){
           replier.reply("자동 업데이트 완료.\n\n명령어를 다시 사용해주세요.");
           user.skill_cool_1 = 45000;
           user.skill_point = 3 * (user.level - 1);
           user.skill_mp_1 = 80;
           user.skill_1 = 5;
           user.skill_stone_1 = 10000;
           user.skill_level_1 = 0;
           user.skill_level_2 = 0;
           user.skill_level_3 = 0;
           user.skill_point_2 = 20;
           user.skill_stone_2 = 5000;
           user.skill_mp_2 = 65;
           user.skill_time_2 = 8000;
           user.skill_cool_2 = 45000;
           user.skill_name_3 = "회복";
           user.skill_point_3 = 30;
           user.skill_stone_3 = 8000;
           user.skill_cool_3 = 60000;
           user.skill_mp_3 = 80;
           user.skill_cool1 = false;
           user.skill_cool2 = false;
           user.skill_cool3 = false;
           savePlayer(user, sender);
           java.lang.Thread.sleep(10);
           user.skill_2 = Math.round(75 - (5 * user.skill_level_2));
           user.skill_3 = Math.round(30 + (4 * user.skill_level_3));
           savePlayer(user, sender);
       }
       else {
          switch(cmd[1]) {
              case "정보":
                  switch(cmd[2]) {
                      case "1":
                      if(user.skill_name_1 == "강타"){
                      replier.reply(
                      sender + "님의 스킬 정보\n잔여 스킬포인트 : " + user.skill_point + "\n" + "\u200b".repeat(500)
                      + "\n\n- " + user.skill_name_1 + " (ID 1) -"
                      + "\n스킬 Lv. " + user.skill_level_1
                      + "\n-> 스킬 사용시 : 단일 적에게 ATK의 " + user.skill_1 + "배에 해당하는 피해를 입힙니다."
                      + "\n(쿨타임 45초 / MP 소모량 80)"
                      + "\n\n<스킬 강화 비용>"
                      + "\n스킬포인트 × " + user.skill_point_1
                      + "\n" + user.skill_stone_1 + " G"
                      + "\n\n스킬 5레벨 달성시 마스터스킬로 진화가 가능합니다."
                      );
                      }
                      break;
                      case "2":
                      if(user.skill_name_2 == "불굴"){
                      replier.reply(
                      sender + "님의 스킬 정보\n잔여 스킬포인트 : " + user.skill_point + "\n" + "\u200b".repeat(500)
                      + "\n\n- " + user.skill_name_2 + " (ID 2) -"
                      + "\n스킬 Lv. " + user.skill_level_2
                      + "\n-> 스킬 사용시 : " + (user.skill_time_2 / 1000) + "초동안 받는 피해가 " + (100 - user.skill_2) + "% 감소합니다."
                      + "\n(쿨타임 45초 / MP 소모량 55)"
                      + "\n\n<스킬 강화 비용>"
                      + "\n스킬포인트 × " + user.skill_point_2
                      + "\n" + user.skill_stone_2 + " G"
                      + "\n\n스킬 5레벨 달성시 마스터스킬로 진화가 가능합니다."
                      );
                      }
                      break;
                      case "3":
                      if(user.skill_name_3 == "회복"){
                      replier.reply(
                      sender + "님의 스킬 정보\n잔여 스킬포인트 : " + user.skill_point + "\n" + "\u200b".repeat(500)
                      + "\n\n- " + user.skill_name_3 + " (ID 3) -"
                      + "\n스킬 Lv. " + user.skill_level_3
                      + "\n-> 스킬 사용시 : 최대체력의 " + (user.skill_3) + "%에 해당하는 체력을 회복합니다."
                      + "\n(쿨타임 60초 / MP 소모량 80)"
                      + "\n\n<스킬 강화 비용>"
                      + "\n스킬포인트 × " + user.skill_point_3
                      + "\n" + user.skill_stone_3 + " G"
                      + "\n\n스킬 5레벨 달성시 마스터스킬로 진화가 가능합니다."
                      );
                      }
                      break;
                  }
                  break;
              
                  case "강화":
                  switch(cmd[2]) {
                      case "1":
                      if(user.skill_level_1 !== 5 && user.skill_cool1 == false && user.skill_point >= user.skill_point_1 && user.gold >= user.skill_stone_1){
                          replier.reply("스킬 강화 완료!\n\n강타 스킬이 " + (user.skill_level_1 + 1) + "레벨로 강화되었습니다.");
                          user.skill_point -= user.skill_point_1;
                          user.gold -= user.skill_stone_1;
                          user.skill_1 += 1;
                          user.skill_level_1 += 1;
                          savePlayer(user, sender);
                      }
                      break;
                      
                      case "2":
                      if(user.skill_level_2 !== 5 && user.skill_cool2 == false && user.skill_point >= user.skill_point_2 && user.gold >= user.skill_stone_2){
                          replier.reply("스킬 강화 완료!\n\n불굴 스킬이 " + (user.skill_level_2 + 1) + "레벨로 강화되었습니다.");
                          user.skill_point -= user.skill_point_2;
                          user.gold -= user.skill_stone_2;
                          user.skill_2 -= 5;
                          user.skill_2 = Math.round(user.skill_2);
                          user.skill_level_2 += 1;
                          savePlayer(user, sender);
                      }
                      break;
                      
                      case "3":
                      if(user.skill_level_3 !== 5 && user.skill_cool3 == false && user.skill_point >= user.skill_point_3 && user.gold >= user.skill_stone_3){
                          replier.reply("스킬 강화 완료!\n\n회복 스킬이 " + (user.skill_level_3 + 1) + "레벨로 강화되었습니다.");
                          user.skill_point -= user.skill_point_3;
                          user.gold -= user.skill_stone_3;
                          user.skill_3 += 4;
                          user.skill_level_3 += 1;
                          savePlayer(user, sender);
                      }
                      break;
                  }
                  break;
                  
                  case "사용":
                      switch(cmd[2]){
                          case "1":
                          if(user.skill_cool1 == false){
                            if(user.mp_total < 80){
                              replier.reply("마나가 부족하여 스킬을 사용할 수 없습니다.");
                            }
                              if(user.monster_id !== 0 && user.mp_total >= 80 && user.location <= 15){
                                  user.mp -= 80;
                                  user.skill_cool1 = true;
                                  savePlayer(user, sender);
                                  let dmg_per = makeRnd(1, 100); // 랜덤 추가데미지
                                  let crt = makeRnd(1, 1000000); // 크리티컬%
                                  let dmg = Math.round( // 치명타 적용된 최종대미지
                                  user.atk_total * ( // ~을 곱한다
                                  user.cri_per_total < crt // 치명타 미발생 시
                                  ? (((950 + dmg_per) - user.monster_def * 10) / 1000) // 1 × 데미지 가중치 -5 ~ +5%를
                                  : (user.cri_dam_total / 1000)  // (아니라면 = 발생 시) 크리댐/1000을.
                                  )
                                  );

                                  if(user.cri_per_total >= crt){
                                  replier.reply("< CRITICAL >\n\n추가 데미지를 입혔습니다!");
                                  }
                                  
                                  if(dmg < 0){
                                  dmg = 0;
                                  }
                                  
                                  user.monster_hp -= (dmg * user.skill_1); //일단 대미지 입히고
                                  user.hp -= user.monster_atk; // (유저도 대미지를)입고 시작
                                  savePlayer(user, sender);
                                  replier.reply(
                                  "< 강타 스킬 시전 >"
                                  + "\n\n몬스터에게 " + (dmg * user.skill_1) + " 데미지를 입혔습니다.\n\n(80 MP 소모됨)");
                                  
                                  if(user.monster_hp <= 0){
        // exp계산 여기로 몰아서
        // let lvup = Math.round(user.location * 2 * 0.55) + 1; // EXP획득량 조정치 : 장소ID에 비례하여 감소
        let exp = Math.round(
            (user.monster_exp + user.Expmax / (/* lvup - 변수 절약*/ user.location * 2 * 0.4 + 2))
            * exp_multiple(user.level)
        );

        replier.reply(
            "[" + user.monster_name + "] 사냥 성공!!"
            + "\n\n<전리품>"
            + "\nEXP + " + Digit.stringify(exp)
            + "\nGOLD + " + ((200 + (user.location - 1) * 15) * 1)
            + "\n2 LP"
            + "\n2 STAR"
            + "\n\nNEXT LV. 까지 " + Math.round(((user.Expmax - (user.Exp + exp)) / user.Expmax) * 100) + "% 남음\n(" + Digit.stringify(user.Expmax - (user.Exp + exp)) + " EXP 남음)"
        );

        // 이거 상수로 만들고 전역으로 옮기시면 좋을 것 같아요
        let REINSTONE_DROP_PERCENT = 400; // 하급 강화석 드랍 %
        let STARBOX_DROP_PERCENT = 500; // 스타박스 저급 설계도 드랍 %
        let AF_S_DROP_PERCENT = 700;
        let AF_M_DROP_PERCENT = 800;
        let KEY_DROP_PERCENT = 835; // 레벨업 열쇠 드랍 %
        let drop = makeRnd(1, 1000);

        user.Exp += exp;
        user.gold += (200 + (user.location - 1) * 15) * 1;
        user.monster_count += 1;
        user.rankscore += 2;
        user.STAR += 2;
        user.monster_id = 0;

        if(drop <= REINSTONE_DROP_PERCENT){
            let count = reinStone_drop_count(user.location);
            user.stone_s += count;
            replier.reply("하급 강화석이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.stone_s);
        } else if(/*Math.random()*100*/drop <= STARBOX_DROP_PERCENT){
            let count = makeRnd(1, 4);
            user.star_print_ss += count;
            replier.reply("스타박스 하급 설계도이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.star_print_ss);
        }
          else if(user.AF_s !== undefined && drop <= AF_S_DROP_PERCENT){
            let count = makeRnd(5, 10);
            user.AF_s += count;
            replier.reply("[재료] 아티팩트 가루이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.AF_s);
        }
          else if(user.AF_m !== undefined && drop <= AF_M_DROP_PERCENT){
            let count = makeRnd(1, 4);
            user.AF_m += count;
            replier.reply("[재료] 아티팩트 조각이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.AF_m);
        }
          else if(drop <= KEY_DROP_PERCENT && user.level == 1000){
            user.Key += 1;
            replier.reply("레벨업 열쇠이(가) 드랍됐습니다!\n\n현재 보유량 : " + user.Key);
        }
      }

      savePlayer(user, sender);
      
                                  
                                  java.lang.Thread.sleep(45000);
                                  
                                  a = updatePlayer(sender);{
                                  a.skill_cool1 = false;
                                  savePlayer(a, sender);
                                  }
                                  replier.reply("강타 스킬의 재사용 대기시간이 끝났습니다.\n\n이제 스킬을 재사용할 수 있습니다.");
                                  }
                              }
                              else{
                                replier.reply("재사용 대기시간으로 인해 사용이 불가합니다.");
                              }
                              break;
                              
                              
                          }
                      break;
          }
          }
    }
     
     
     /*if(msg == "*4위!"){
       user.tag_u = "[⚪️] S5 TESTER";
       savePlayer(user, sender);
     }*/
     
     if(cmd[0] == "조합"){
       if(isNaN(cmd[2]) || cmd[2] < 1){
         replier.reply("- 조합법 목록 -\n\n" + "\u200b".repeat(500) + "\n조합 명령어 : *조합 (id) (갯수)\n\n[ID 12] 중급 강화석 (10개 묶음)\n\n<재료>\n- LEVEL 700+\n- 30 하급 강화석\n- 1 일반 스타박스 설계도"
       + "\n\nㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ\n\n[ID 22] 일반 스타박스 설계도\n\n<재료>\n- LEVEL 50+\n- 5 하급 스타박스 설계도\n- 100 G"
       + "\n\nㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ\n\n[ID 52] 아티팩트 조각 (10개 묶음)\n\n<재료>\n- LEVEL 1+\n- 1 일반 스타박스 설계도\n- 30 아티팩트 가루\n- 300 G\n- 25 STAR"
       + "\n\nㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ\n\n[ID 53] 아티팩트 수정\n\n<재료>\n- LEVEL 50+\n- 1 일반 스타박스 설계도\n- 2 아티팩트 조각\n- 15 아티팩트 가루\n- 30 STAR\n- 400 G"
       + "\n\n곧 더 많은 조합법이 추가됩니다!\ncomming soon.");
       }
       else{
       cmd[2] = +cmd[2] >> 0;
       switch(cmd[1]){
         case "12":
           if(user.level >= 700 && user.star_print_s >= (cmd[2]) && user.stone_s >= (30 * cmd[2])){
             replier.reply("중급 강화석 × " + (10 * cmd[2]) + "\n조합 완료!");
             user.star_print_s -= cmd[2];
             user.stone_s -= 30 * Math.round(cmd[2]);
             user.stone_m += 10 * Math.round(cmd[2]);
             savePlayer(user, sender);
           }
           else{
             replier.reply("재료가 부족합니다.");
           }
           break;
           
         case "22":
           if(user.level >= 50 && user.star_print_ss >= (5 * cmd[2]) && user.gold >= (100 * cmd[2])){
             replier.reply("일반 스타박스 설계도 × " + (cmd[2]) + "\n조합 완료!");
             user.star_print_ss -= 5 * cmd[2];
             user.gold -= 100 * Math.round(cmd[2]);
             user.star_print_s += Math.round(cmd[2]);
             savePlayer(user, sender);
           }
           else{
             replier.reply("재료가 부족합니다.");
           }
           break;
           
         case "52":
           if(user.AF_s !== undefined && user.level >= 1 && user.star_print_s >= (cmd[2]) && user.AF_s >= (30 * cmd[2]) && user.gold >= (300 * cmd[2]) && user.STAR >= (25 * cmd[2])){
             replier.reply("아티팩트 조각 × " + (10 * cmd[2]) + "\n조합 완료!");
             user.star_print_s -= cmd[2];
             user.AF_s -= 30 * Math.round(cmd[2]);
             user.gold -= 300 * Math.round(cmd[2]);
             user.STAR -= 25 * Math.round(cmd[2]);
             user.AF_m += 10 * Math.round(cmd[2]);
             savePlayer(user, sender);
           }
           else{
             replier.reply("재료가 부족합니다.");
           }
           break;
           
        case "53":
           if(user.AF_s !== undefined && user.level >= 50 && user.star_print_s >= (cmd[2]) && user.AF_m >= (2 * cmd[2]) && user.AF_s >= (15 * cmd[2]) && user.gold >= (400 * cmd[2]) && user.STAR >= (30 * cmd[2])){
             replier.reply("아티팩트 수정 × " + (cmd[2]) + "\n조합 완료!");
             user.star_print_s -= cmd[2];
             user.AF_s -= 15 * Math.round(cmd[2]);
             user.gold -= 400 * Math.round(cmd[2]);
             user.STAR -= 30 * Math.round(cmd[2]);
             user.AF_m -= 2 * Math.round(cmd[2]);
             user.AF_l += cmd[2];
             savePlayer(user, sender);
           }
           else{
             replier.reply("재료가 부족합니다.");
           }
           break;
           }
       }
     }
     
     
     
     if(cmd[0] == "거래"){
       if(user.level >= 30){
       if(user.heal == false && user.monster_id == 0){
         if(isNaN(cmd[2]) || cmd[2] < 1 || cmd[3] == sender){
            replier.reply("*거래 (거래 id) (갯수) (거래상대 닉네임)으로 재화나 아이템을 거래하세요.\n\n\nex)*거래 S 10 PIPI38 \n= STAR 10개를 PIPI38계정으로 전달\n"
            + "\u200b".repeat(500)
            + "\n\n\n거래 ID S / STAR (수수료 6%)\n거래 ID G / GOLD (수수료 4%)\n\n거래 ID 0 / 출석 랜덤박스\n-> 적정 거래가격 : 1,000 ~ 3,000 G\n\n거래 ID 11 / 하급 강화석\n-> 적정 거래가격 : 400 ~ 550 G\n\n거래 ID 21 / 하급 스타박스 설계도\n-> 적정 거래가격 : 50 ~ 250 G\n\n거래 ID 51 / 아티팩트 가루\n-> 적정 거래가격 : 6 ~ 12 G\n거래 ID 52 / 아티팩트 조각\n-> 적정 거래가격 : 70 ~ 200 G\n거래 ID 53 / 아티팩트 수정\n->적정 거래가격 : 900 ~ 2,000 G\n\n■ 소수점 단위는 버려서 계산됩니다.");
            return;
        }
        switch(cmd[1]){
            case "S":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.STAR >= cmd[2]){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n" + Math.round(cmd[2]) + " STAR 전달 완료.\n(수수료 6% 차감)");
                    b.STAR -= Math.floor(cmd[2]);
                    a.STAR += Math.floor(cmd[2] * 0.94);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "G":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.gold >= cmd[2]){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n" + Math.round(cmd[2]) + " GOLD 전달 완료.\n(수수료 4% 차감)");
                    b.gold -= Math.floor(cmd[2]);
                    a.gold += Math.floor(cmd[2] * 0.96);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "0":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.box_event >= cmd[2]){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n출석 랜덤박스 × " + Math.floor(cmd[2]) + " 전달 완료.");
                    b.box_event -= Math.floor(cmd[2]);
                    a.box_event += Math.floor(cmd[2]);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "11":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.stone_s >= cmd[2]){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n하급 강화석 × " + Math.floor(cmd[2]) + " 전달 완료.");
                    b.stone_s -= Math.floor(cmd[2]);
                    a.stone_s += Math.floor(cmd[2]);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "21":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.stone_s >= cmd[2]){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n하급 스타박스 설계도 × " + Math.floor(cmd[2]) + " 전달 완료.");
                    b.star_print_ss -= Math.floor(cmd[2]);
                    a.star_print_ss += Math.floor(cmd[2]);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "51":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.AF_s >= cmd[2] && a.AF_s !== undefined && b.AF_s !== undefined){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n아티팩트 가루 × " + Math.floor(cmd[2]) + " 전달 완료.");
                    b.AF_s -= Math.floor(cmd[2]);
                    a.AF_s += Math.floor(cmd[2]);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
            
            case "52":
                a = updatePlayer(cmd[3]);
                b = updatePlayer(sender);
                if(a.name !== undefined && b.AF_m >= cmd[2] && a.AF_m !== undefined && b.AF_m !== undefined){
                    replier.reply("[ 전달 완료 ]\n\n" + sender + " -> " + a.name + "\n아티팩트 조각 × " + Math.floor(cmd[2]) + " 전달 완료.");
                    b.AF_m -= Math.floor(cmd[2]);
                    a.AF_m += Math.floor(cmd[2]);
                    savePlayer(a, cmd[3]);
                    savePlayer(b, sender);
                }
            break;
        }
       }
       else{
         replier.reply("회복중이거나, 사냥중에는 거래 명령어를 사용하실 수 없습니다.");
       }
       }
       else {
         replier.reply("거래 명령어는 Lv 30부터 사용 가능합니다.");
       }
     }
     

// ------------
// 연산 책임 분산
// -------------



// 명령어: 공격
    if (msg === "*공격") {
      if(user.location <= 15){
      // 사냥 전 과정 우선 처리 및 필터링
      if(!user.monster_id){
        replier.reply("공격할 대상이 설정되지 않았습니다.");
        return;
      }

      if(user.heal){
        replier.reply("회복 중에는 행동할 수 없습니다.");
        return;
      }

      if(user.location > 500){ // ㅇㅅㅇ?
        return;
      }

      if(user.hp_total <= 0){
        replier.reply(
            "체력 소진으로 인해 전투가 취소되었습니다."
            + "\n\n*회복 으로 체력을 회복해주세요!"
        );

        user.monster_id = 0;
        savePlayer(user, sender);
        return;
      }

      // 실제 대미지 처리
      let dmg_per = makeRnd(1, 100); // 랜덤 추가데미지
      let crt = makeRnd(1, 1000000); // 크리티컬%
      let dmg = Math.round( // 치명타 적용된 최종대미지
        user.atk_total * ( // ~을 곱한다
            user.cri_per_total < crt // 치명타 미발생 시
                ? (((950 + dmg_per) - user.monster_def * 10) / 1000) // 1 × 데미지 가중치 -5 ~ +5%를
                : (user.cri_dam_total / 1000)  // (아니라면 = 발생 시) 크리댐/1000을.
            )
        );

      if(user.cri_per_total >= crt){
        if(user.location !== 14){
        replier.reply("< CRITICAL >\n\n추가 데미지를 입혔습니다!");
        }
        else if(user.location == 14){
        replier.reply("필드 특성으로 인해 크리티컬 데미지는 무효화됩니다.");
        user.monster_hp += dmg;
        }
      }
        
      if(user.location !== 14){
      user.monster_hp -= dmg; //일단 대미지 입히고
      user.hp -= user.monster_atk; // (유저도 대미지를)입고 시작

      replier.reply(
          "<" + user.monster_name + ">"
          + "\n\n몬스터 HP { " + user.monster_hp + " / " + user.monster_hpmax + " }\n" //+ makeBar(user.monster_hp, user.monster_hpmax, 10) + " ]"
          + "\n\n유저 HP { " + (user.hp_total - user.monster_atk) + " / " + user.hpmax_total + " }\n"
          + "유저 MP { " + user.mp_total + " / " + user.mpmax_total + " }\n"
          + "\n[ + ] 몬스터에게 " + dmg
          + "\n데미지를 입혔습니다!"
          + "\n\n[ - ] 몬스터에게 " + user.monster_atk + "데미지를 입었습니다."
      );
      }
      else{
      user.monster_hp -= dmg; //일단 대미지 입히고
      user.hp -= Math.round(user.monster_atk * (1 + ((100000 - user.monster_hp) / 100000))); // (유저도 대미지를)입고 시작

      replier.reply(
          "<" + user.monster_name + ">"
          + "\n\n몬스터 HP { " + user.monster_hp + " / " + user.monster_hpmax + " }\n" //+ makeBar(user.monster_hp, user.monster_hpmax, 10) + " ]"
          + "\n\n유저 HP { " + (user.hp_total - user.monster_atk) + " / " + user.hpmax_total + " }\n"
          + "유저 MP { " + user.mp_total + " / " + user.mpmax_total + " }\n"
          + "\n[ + ] 몬스터에게 " + dmg
          + "\n데미지를 입혔습니다!"
          + "\n\n[ - ] 몬스터에게 " + Math.round(user.monster_atk * (1 + ((100000 - user.monster_hp) / 100000))) + "데미지를 입었습니다."
      );
      }
    
      // 독 대미지 처리
      // 조건: 장소ID 12/13
      // 확률: 1/5
      if(user.location === 12 || user.location === 13){
        if(makeRnd(1, 5) === 1){
          let poison = Math.round((user.hpmax_total - user.hp_total) / (30 - (user.location - 12) * 5)) + 50;
          replier.reply(
            "독 데미지를 입었습니다."
            + "\n\nHP - " + poison
          );
          user.hp -= poison;
        }
      }
    
      // 몬스터 체력이 0 이하라면, 즉 사냥에 성공했다면
      if(user.monster_hp <= 0){
        // exp계산 여기로 몰아서
        // let lvup = Math.round(user.location * 2 * 0.55) + 1; // EXP획득량 조정치 : 장소ID에 비례하여 감소
        let exp = Math.round(
            (user.monster_exp + user.Expmax / (/* lvup - 변수 절약*/ user.location * 2 * 0.4 + 2))
            * exp_multiple(user.level)
        );

        replier.reply(
            "[" + user.monster_name + "] 사냥 성공!!"
            + "\n\n<전리품>"
            + "\nEXP + " + Digit.stringify(exp)
            + "\nGOLD + " + ((200 + (user.location - 1) * 15) * 1)
            + "\n2 LP"
            + "\n2 STAR"
            + "\n\nNEXT LV. 까지 " + Math.round(((user.Expmax - (user.Exp + exp)) / user.Expmax) * 100) + "% 남음\n(" + Digit.stringify(user.Expmax - (user.Exp + exp)) + " EXP 남음)"
        );

        // 이거 상수로 만들고 전역으로 옮기시면 좋을 것 같아요
        let REINSTONE_DROP_PERCENT = 400; // 하급 강화석 드랍 %
        let STARBOX_DROP_PERCENT = 500; // 스타박스 저급 설계도 드랍 %
        let AF_S_DROP_PERCENT = 700;
        let AF_M_DROP_PERCENT = 800;
        let KEY_DROP_PERCENT = 835; // 레벨업 열쇠 드랍 %
        let drop = makeRnd(1, 1000);

        user.Exp += exp;
        user.gold += (200 + (user.location - 1) * 15) * 1;
        user.monster_count += 1;
        user.rankscore += 2;
        user.STAR += 2;
        user.monster_id = 0;

        if(drop <= REINSTONE_DROP_PERCENT){
            let count = reinStone_drop_count(user.location);
            user.stone_s += count;
            replier.reply("하급 강화석이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.stone_s);
        } else if(/*Math.random()*100*/drop <= STARBOX_DROP_PERCENT){
            let count = makeRnd(1, 4);
            user.star_print_ss += count;
            replier.reply("스타박스 하급 설계도이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.star_print_ss);
        }
          else if(user.AF_s !== undefined && drop <= AF_S_DROP_PERCENT){
            let count = makeRnd(7, 13);
            user.AF_s += count;
            replier.reply("[재료] 아티팩트 가루이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.AF_s);
        }
          else if(user.AF_m !== undefined && drop <= AF_M_DROP_PERCENT){
            let count = makeRnd(1, 4);
            user.AF_m += count;
            replier.reply("[재료] 아티팩트 조각이(가) " + count + "개 드랍됐습니다!\n\n현재 보유량 : " + user.AF_m);
        }
          else if(drop <= KEY_DROP_PERCENT && user.level == 1000){
            user.Key += 1;
            replier.reply("레벨업 열쇠이(가) 드랍됐습니다!\n\n현재 보유량 : " + user.Key);
        }
      }

      savePlayer(user, sender);
      return;
      }
      else{
        if(user.B_skill == false){
        bossbar_count = (Math.floor(user.monster_hp / 500000));
        bossbar_curr = (user.monster_hp -= (bossbar_count * 500000));
        let dmg_per = makeRnd(1, 100); // 랜덤 추가데미지
        let crt = makeRnd(1, 1000000); // 크리티컬%
        let dmg = Math.round( // 치명타 적용된 최종대미지
         user.atk_total * ( // ~을 곱한다
            user.cri_per_total < crt // 치명타 미발생 시
                ? (((950 + dmg_per) - user.monster_def * 10) / 1000) // 1 × 데미지 가중치 -5 ~ +5%를
                : (user.cri_dam_total / 1000)  // (아니라면 = 발생 시) 크리댐/1000을.
            )
         );
         
         if(user.cri_per_total >= crt){
           replier.reply("< CRITICAL >\n\n추가 데미지를 입혔습니다.");
         }
         user.monster_hp -= dmg;
         user.hp -= 603;
         user.B_P += 4;
         savePlayer(user, sender);
         replier.reply("<이중갑옷 창술사>\n\n몬스터 HP : " + user.monster_hp + " / " + user.monster_hpmax + "\n[" + makeBar(bossbar_curr, 500000, 10) + "] × " + bossbar_count + "\n몬스터 분노게이지 [" + makeBar(user.B_P, 1000, 10) + "]\n\n" + sender + "님의 HP : " + user.hp_total + "\n\n몬스터에게 " + dmg + " 만큼의 피해를 입혔습니다.\n\n몬스터에게 603 만큼의 피해를 입었습니다.\n\n\n    1   2\nA " + user.F_A1 + " " + user.F_A2 + "\nB " + user.F_B1 + " " + user.F_B2);
      }
      }
    }
    
    if(msg == "*행동취소"){
      replier.reply("모든 행동이 취소되었습니다.");
      user.monster_id = 0;
      savePlayer(user, sender);
    }
    
    if(msg === "*보스목록"){
        if(user.location == 41){
            replier.reply("- 얼어붙은 협곡 / 보스 목록 -\n\n보스 상세정보 확인 = *보스정보 (ID)\n레이드 시작명령어 = *레이드시작 (BN)\n레이드 중도포기 = *행동취소" + "\u200b".repeat(500)
             + "\n\n\n■ 아이스 엘리자드 (ID 1) ■\n// SEASON DAILY RAID - SOLO //\n[ ! ] 레이드 시작시 최소 1장 이상의 일일레이드 티켓을 보유해야 합니다."
             + "\n\n<TIER 1>\nNORMAL (Lv 50) / BN 1\nHARD (Lv 150) / BN 2\nHELL (Lv 250) / BN 3"
             + "\n\n<TIER 2>\nNORMAL (Lv 200) / BN 5\nHARD (Lv 350) / BN 6\nHELL (Lv 500) / BN 7"
             + "\n\n<TIER 3>\nNORMAL (Lv 400) / BN 9\nHARD (Lv 600) / BN 10\nHELL (Lv 800) / BN 11"
             + "\n\n<TIER 4>\nNORMAL (Lv 550) / BN 13\nHARD (Lv 750) / BN 14\nHELL (Lv 950) / BN 15"
             + "\n\n<TIER 5>\nNORMAL (Lv 700) / BN 17\nHARD (Lv 850) / BN 18\nHELL (Lv 1000) / BN 19"
             + "\n\n<TIER 6>\nNORMAL (Lv 1100) / BN 21\nHARD (Lv 1250) / BN 22\nHELL (Lv 1400) / BN 23"
             + "\n\n<TIER 7>\nNORMAL (Lv -) / BN -\nHARD (Lv -) / BN -\nHELL (Lv 1500) / BN 25");
             }
    }
    
    if(msg == "*보스정보 1"){
        if(user.location == 41){
            replier.reply("- 아이스 엘리자드 (ID 1) -\n\n" + "\u200b".repeat(500) + "\n\n[공통 정보]\nMAP SIZE // 2 × 2\nSECTION HP // 500 ~ 800 + a\n1판당 필요비용 // 1,000 G + 20 STAR\n(+ 1 레이드티켓 D)\n× 레이드티켓은 클리어했을때만 소모됩니다 ×\n\n\n[특별 규칙]\n\n• 해당 레이드에서 크리티컬 데미지는 ×200%로 고정됩니다.\n\n• NORMAL/HARD의 경우 최고등급이 S+,\nHELL의 경우 L+등급까지 존재하며,\n등급이 1칸 오를때마다 보상이 5%씩 상승합니다.\n\n• 해당 레이드 한정으로 최저등급인 D를 달성하더라도\n보상 획득이 가능합니다.");
        }
    }
    
    
    
   /* if(msg == "*레이드시작"){
        switch(cmd[1]){
            case 6:
                
        }
    }*/
    
    /*if(msg == "*레이드시작"){
        switch(cmd[1]){
            case 3:
                user.boss_id = 3;
                user.boss_hp = 150000;
                user.boss_hpmax = 150000;
                user.boss_atk = 22;
                user.boss_skillA = 700; //스킬1 데미지 (HP)
                user.boss_skillD = 8; //힐구슬
                savePlayer(user, sender);
        }
        
    }
    
    if(msg ==)
    
    */

    // 명령어: 상점
    if (cmd[0] === "상점") {
        replier.reply("[상점]\n\n" + "\u200b".repeat(500) + "\n\n*구매 (id) (갯수) = 해당 id의 아이템을 (갯수)만큼 구매합니다."
        + "\n\n하급 HP 물약 [ID 1]\n판매가격 : 200 G (33% 할인)" //원가 300, 800
        + "\n\n중급 HP 물약 [ID 2]\n판매가격 : 500 G (33% 할인)");
        return;
    }
    
    if(cmd[0] === "출석"){
            let today = new Date(Date.now() + 32400000).toISOString().split('T')[0]
            let userDate = new Date(user.date);
            let diffTime = Math.abs(new Date() - userDate);
            //let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
            
            if (user.date !== today) {
                if(diffTime <= 172800000){
                if(user.dates == 3){
                replier.reply((user.dates + 1) + "일 연속 출석으로, 추가 보상을 획득했습니다.\n\n- 출석 코인 × 2");
                user.dates += 1;
                user.event4 += 2;
                savePlayer(user, sender);
                }
                else{
                replier.reply((user.dates + 1) + "일 연속 출석으로, 추가 보상을 획득했습니다.\n\n- 출석 코인 × 2");
                user.dates += 1;
                user.event4 += 2;
                savePlayer(user, sender);
                }
                }
                else{
                replier.reply("연속 출석이 진행되지 않아 연속출석일이 1일로 초기화되었습니다.");
                user.dates = 1;
                savePlayer(user, sender);
                }
                java.lang.Thread.sleep(500);
                replier.reply('출석체크 완료!\n\n' + today + " 출석 보상을 받았습니다.\n\n- 출석 랜덤 박스 × 1\n- 출석 코인 × 2\n- 1,000 G\n- 30 STAR\n\n출석 코인을 모아 아이템 또는 특별한 상품을 구매해보세요!\n*출석상점 으로, 출석코인 상점을 확인할 수 있습니다.");
                user.date = today;
                user.event4 += 2;
                user.gold += 1000;
                user.STAR += 30;
                user.box_event += 1;
                savePlayer(user, sender);
            }
            else{
                replier.reply("오늘은 이미 출석체크 보상을 받았습니다.");
            }
        }
        
        
    if(cmd[0] === "출석상점"){
        if(user.dates < 2){
          d2 = "\n\n[ ? ] 2일 연속 출석시 개방됩니다.";
          d7 = "\n\n[ ? ] 7일 연속 출석시 개방됩니다.";
          d14 = "\n\n[ ? ] 14일 연속 출석시 개방됩니다.";
          d30 = "\n\n[ ☆ ] 30일 연속 출석시 개방됩니다.";
        }
        else if(user.dates < 7){
          d2 = "\n\n(mini) 아티팩트 가루 세트 [ID B1]\n아티팩트 가루 150개를 획득합니다.\n판매가격 : 5코인";
          d7 = "\n\n[ ? ] 7일 연속 출석시 개방됩니다.";
          d14 = "\n\n[ ? ] 14일 연속 출석시 개방됩니다.";
          d30 = "\n\n[ ☆ ] 30일 연속 출석시 개방됩니다.";
        }
        else if(user.dates < 14){
          d2 = "\n\n(mini) 아티팩트 가루 세트 [ID B1]\n아티팩트 가루 150개를 획득합니다.\n판매가격 : 5코인";
          d7 = "\n\n(mini) 아티팩트 조각 세트 [ID B2]\n아티팩트 조각 40개를 획득합니다.\n판매가격 : 10코인";
          d14 = "\n\n[ ? ] 14일 연속 출석시 개방됩니다.";
          d30 = "\n\n[ ☆ ] 30일 연속 출석시 개방됩니다.";
        }
        else if(user.dates < 30){
          d2 = "\n\n(mini) 아티팩트 가루 세트 [ID B1]\n아티팩트 가루 150개를 획득합니다.\n판매가격 : 5코인";
          d7 = "\n\n(mini) 아티팩트 조각 세트 [ID B2]\n아티팩트 조각 40개를 획득합니다.\n판매가격 : 10코인";
          d14 = "\n\n레이드티켓 D [ID 준비중]\n레이드티켓 (D) 1장을 획득합니다.\n판매가격 : 30코인";
          d30 = "\n\n[ ☆ ] 30일 연속 출석시 개방됩니다.";
        }
        else if(user.dates >= 30){
          d2 = "\n\n(mini) 아티팩트 가루 세트 [ID B1]\n아티팩트 가루 150개를 획득합니다.\n판매가격 : 5코인";
          d7 = "\n\n(mini) 아티팩트 조각 세트 [ID B2]\n아티팩트 조각 40개를 획득합니다.\n판매가격 : 10코인";
          d14 = "\n\n레이드티켓 D [ID 준비중]\n레이드티켓 (D) 1장을 획득합니다.\n판매가격 : 30코인";
          d30 = "\n\n길드 생성 티켓 [ID 준비중]\n구매시 길드를 생성할 수 있습니다.\n판매가격 : 50코인 + 3,000 STAR";
        }
        replier.reply("< 출석상점 >\n\n" + "\u200b".repeat(500)
        + sender + "님의 연속출석일수 : " + user.dates 
        + "\n" + sender + "님의 출석코인 보유갯수 : " + user.event4
        + "\n\n*출석상점구매 (id) = 해당 id의 상품을 1개 구매합니다."
        + "\n\n\n스타 랜덤박스 S [ID A1]\n1 ~ 3000 STAR이(가) 서로 다른 확률로 등장합니다.\n판매가격 : 5코인"
        + "\n\n(mini) 하급 강화석 세트 [ID A2]\n하급 강화석 20개를 획득합니다.\n판매가격 : 5코인"
        + "\n\n골드 랜덤박스 S [ID A3]\n500 ~ 15000 G이(가) 서로 다른 확률로 등장합니다.\n판매가격 : 6코인"
        + d2
        + d7
        + d14
        + d30);
    }
    
    if(msg == "*출석상점구매 A1"){
      if(user.event4 >= 5){
        a = makeRnd(1, 100);
        if(a <= 70){
            star = makeRnd(1, 301);
        }
        else if(a <= 97){
            star = makeRnd(300, 1001);
        }
        else{
            star = makeRnd(1000, 3000);
        }
        replier.reply(star + ' STAR를 획득했습니다!');
        user.event4 -= 5;
        user.STAR += star;
        savePlayer(user, sender);
      }
      else{
        replier.reply('출석코인이 부족합니다.');
      }
    }
    
    if(msg == "*출석상점구매 A3"){
      if(user.event4 >= 6){
        a = makeRnd(1, 100);
        if(a <= 50){
            gold = makeRnd(500, 3000);
        }
        else if(a <= 95){
            gold = makeRnd(3001, 8000);
        }
        else{
            gold = makeRnd(8001, 15000);
        }
        replier.reply(gold + ' G를 획득했습니다!');
        user.event4 -= 6;
        user.gold += gold;
        savePlayer(user, sender);
      }
      else{
        replier.reply('출석코인이 부족합니다.');
      }
    }
    
    if(msg == "*출석상점구매 A2"){
      if(user.event4 >= 5){
        replier.reply('하급 강화석 20개를 획득했습니다!');
        user.event4 -= 5;
        user.stone_s += 20;
        savePlayer(user, sender);
      }
      else{
        replier.reply("출석코인이 부족합니다.");
      }
    }
    
    if(msg == "*출석상점구매 B1"){
      if(user.dates >= 2){
      if(user.event4 >= 5){
        replier.reply('아티팩트 가루 150개를 획득했습니다!');
        user.event4 -= 5;
        user.AF_s += 150;
        savePlayer(user, sender);
      }
      else{
        replier.reply("출석코인이 부족합니다.");
      }
      }
      else{
        replier.reply("해당 아이템은 연속 2일 출석을 달성해야 구매 가능한 아이템입니다.");
      }
    }
    
    if(msg == "*출석상점구매 B2"){
      if(user.dates >= 7){
      if(user.event4 >= 10){
        replier.reply('아티팩트 조각 40개를 획득했습니다!');
        user.event4 -= 10;
        user.AF_m += 40;
        savePlayer(user, sender);
      }
      else{
        replier.reply("출석코인이 부족합니다.");
      }
      }
      else{
        replier.reply("해당 아이템은 연속 7일 출석을 달성해야 구매 가능한 아이템입니다.");
      }
    }
    
    if (cmd[0] === "구매") {
        if(isNaN(cmd[2]) || cmd[2] < 0){
            replier.reply("구매할 아이템 수를 입력해주세요. 음수는 입력할 수 없습니다.");
            return;
        }

        cmd[2] = +cmd[2] >> 0;

        switch(cmd[1]){
            case "1":
                    if(user.gold >= (cmd[2] * 200)){
                        user.gold -= (cmd[2] * 200);
                        user.hp_potion_s += cmd[2];
                        savePlayer(user, sender);
                        replier.reply("하급 HP 물약을 " + cmd[2] + "개 구매했습니다."
                        + "\n\n사용된 골드 : " + (cmd[2] * 200));
                    }
                    else{
                        replier.reply("골드가 부족합니다! 구매할 갯수를 줄여서 다시 시도해주세요.");
                    }
                    break;
            case "2":
                    if(user.gold >= (cmd[2] * 500)){
                        user.gold -= (cmd[2] * 500);
                        user.hp_potion_m += cmd[2];
                        savePlayer(user, sender);
                        replier.reply("중급 HP 물약을 " + cmd[2] + "개 구매했습니다."
                        + "\n\n사용된 골드 : " + (cmd[2] * 500));
                    }
                    else{
                        replier.reply("골드가 부족합니다! 구매할 갯수를 줄여서 다시 시도해주세요.");
                    }
                    break;
       
            default:
                replier.reply("없는 품목입니다.");
                return;
        }
        
        savePlayer(user, sender);
        return;
    }

    // 명령어: 스타상점
    if (msg == "*스타상점") {
        replier.reply(
            "= STAR SHOP ="
            + "\n\n다음 재고충전 : 8/31"
            + "\n\n\n\n구글 기프트카드 5,000 ₩"
            + "\n-> 50,000 STAR"
            + "\n남은 갯수 : 1"
            + "\n\n문화상품권 5,000 ₩"
            + "\n-> 50,000 STAR"
            + "\n남은 갯수 : 1"
            + "\n\n자유 치킨 기프티콘 20,000 ₩"
            + "\n-> 200,000 STAR"
            + "\n남은 갯수 : 1"
        );

        return;
    }
    
    if(cmd[0] == "파티생성" && user.location >= 500){
        replier.reply(sender + "님의 파티\n\n[ID -] / 목표보스 : -\n");
    }
    
    if(msg == "*쿠폰입력 100D"){
      if(user.coupon1 !== 41){
      replier.reply("봇오픈 100일 기념 보상 지급완료!\n\n-> " + "1,OOO STAR");
      user.STAR += 1000;
      user.coupon1 = 41;
      savePlayer(user, sender);
      }
      else{
      replier.reply("이미 해당 쿠폰을 사용했습니다.");
      }
    }

    // 명령어: 갑옷
    

    // 명령어: 무기
    
  
    admin = [1349909971, -1823106513, -941693605];
       if (msg == "*코드") { 
       var hashcode = java.lang.String(imageDB.getProfileImage()).hashCode(); 
       var day = new Date(); 
       var H = String(day.getHours()); 
       var M = String(day.getMinutes()); 
       var S = String(day.getSeconds()); 
       var D = String(day.getDate()); 
       var M1 = String(day.getMonth() + 1); 
       var Y = String(day.getFullYear()); 
         
       replier.reply("" + sender + "님의 해시코드" + "\n" + hashcode); 
       }
  
    if (msg.startsWith("*E ")) {
      try {
        let Hash = java.lang.String(imageDB.getProfileImage()).hashCode();
        if (admin.indexOf(Hash) == -1) {
        } else {
          replier.reply(eval(msg.substr(2)));
        }
      }      catch (e) {
  em = "오류명 : " + e.name + "\n오류내용 : " + e.message + "\n오류난 줄 : #" + e.lineNumber;
  replier.reply(em);
}
    }
    
}